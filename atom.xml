<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xiaoqianchang</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xiaoqianchang.github.io/"/>
  <updated>2017-02-26T13:55:17.450Z</updated>
  <id>http://xiaoqianchang.github.io/</id>
  
  <author>
    <name>xiaoqianchang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React Native学习资料</title>
    <link href="http://xiaoqianchang.github.io/2017/02/26/React-Native%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    <id>http://xiaoqianchang.github.io/2017/02/26/React-Native学习资料/</id>
    <published>2017-02-26T08:40:09.000Z</published>
    <updated>2017-02-26T13:55:17.450Z</updated>
    
    <content type="html">&lt;p&gt;本文记录React Native 从环境搭建、签名打包等等一些资料。&lt;/p&gt;
&lt;h2 id=&quot;React-Native进行签名打包成Apk&quot;&gt;&lt;a href=&quot;#React-Native进行签名打包成Apk&quot; class=&quot;headerlink&quot; title=&quot;React Native进行签名打包成Apk&quot;&gt;&lt;/a&gt;React Native进行签名打包成Apk&lt;/h2&gt;&lt;p&gt;对于项目中不存在react.gradle文件的项目打包&lt;/p&gt;
&lt;p&gt;首先命令切换到该react native项目的主目录，然后运行以下的命令，生成assets文件夹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p android/app/src/main/assets
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;紧接着运行以下命令，进行生成inde.android.bundle文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;react-native bundle --platform android --dev &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; --entry-file index.android.js \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --bundle-output android/app/src/main/assets/index.android.bundle \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  --assets-dest android/app/src/main/res/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后运行之前的命令，进行代码和资源文件打包，生成的带有签名的apk还是在上面的目录中。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd android &amp;amp;&amp;amp; ./gradlew assembleRelease
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意：这时有可能不成功，报红色的错误&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;* What went wrong:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Execution failed &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; task &lt;span class=&quot;string&quot;&gt;&#39;:app:processReleaseResources&#39;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process &lt;span class=&quot;string&quot;&gt;&#39;command &#39;&lt;/span&gt;D:\software\android\sdk\build-tools\&lt;span class=&quot;number&quot;&gt;23.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;\aapt.exe&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; finished with non-zero &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; value &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这可能是由于在生成res时图片资源的名称过长，超过了windows的限制导致的。&lt;/p&gt;
&lt;p&gt;运行Apk&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd android &amp;amp;&amp;amp; ./gradlew installRelease
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;React-Native库版本升级-Upgrading-与降级讲解&quot;&gt;&lt;a href=&quot;#React-Native库版本升级-Upgrading-与降级讲解&quot; class=&quot;headerlink&quot; title=&quot;React Native库版本升级(Upgrading)与降级讲解&quot;&gt;&lt;/a&gt;React Native库版本升级(Upgrading)与降级讲解&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;更新React Native项目依赖包版本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看本地的React Native的版本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;react-native --version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查询react-native的npm包得最新版本(react native的npm包的地址为: &lt;a href=&quot;https://www.npmjs.com/package/react-native&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.npmjs.com/package/react-native&lt;/a&gt; )，或者采用命令&lt;code&gt;npm info react-native&lt;/code&gt;进行查看。&lt;/p&gt;
&lt;p&gt;在修改package.json文件后，我们需要命令行切换到项目的主文件夹重新执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;根据官网文档能知道:&lt;br&gt;现在已经支持在项目中运行npm install - -save命令来进行安装react-native的新版本了，例如我们需要更新到0.18版本可以采用终端执行如下的命令:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --save react-native@0.18
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;更新项目templates文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新的npm包会包含更新在运行react-native init命令生成的一些动态文件，例如init创建项目的时候会生成iOS和Android的子项目，我们可以通过以下的命令进行获取最新的代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;react-native upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上的react-native upgrade会进行检查项目的文件，然后进行如下几个操作:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果是新添加的文件，会进行直接创建&lt;/li&gt;
&lt;li&gt;如果更新的文件和当前项目的文件是一样的，就会直接忽略跳过&lt;/li&gt;
&lt;li&gt;如果更新的文件和当前项目的文件不同，有冲突的情况，会让我们进行选择是保留原来的文件还是用更新的文件覆盖，这个要看实际情况了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在更新已经完成了，下面就是运行一下看一下是否能够成功运行，运行如下命令:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;react-native run-android
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;React Native版本降级方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;刚刚我们已经完成React Native库升级了，现在假如有这样的一个情况，我们的项目直接创建的用了最新版本的，突然发现最新版本可能不太稳定，在开发过程中就会遇到不可预期的bug。那么就可以考虑进行降级到一个比较稳定的版本比较保险。第一种方案我们参考上面的流程就行了，上面是修改成最新版本的，那么现在我们修改一个低版本，然后执行上面的同样的命令就OK了。但是我们降级这边给大家讲第二个方案，还记得上面有一个官方推荐安装react-native的命令不？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --save react-native@0.18
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那么我们现在假如要降级到0.17版本，如下命令行执行一下就OK了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --save react-native@0.17
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;总结&lt;br&gt;无论是升级还是降级只需要两步，先后执行下面两个命令&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save react-native@&lt;span class=&quot;number&quot;&gt;0.18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;react-native upgrade&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;参考资料：&quot;&gt;&lt;a href=&quot;#参考资料：&quot; class=&quot;headerlink&quot; title=&quot;参考资料：&quot;&gt;&lt;/a&gt;参考资料：&lt;/h2&gt;&lt;p&gt;环境安装：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native-for-android%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BE%8B/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native For Android环境配置以及第一个实例&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E5%8F%B2%E4%B8%8A%E6%9C%80%E8%AF%A6%E7%BB%86windows%E7%89%88%E6%9C%AC%E6%90%AD%E5%BB%BA%E5%AE%89%E8%A3%85react-native%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;史上最详细Windows版本搭建安装React Native环境配置&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E8%BF%9B%E8%A1%8C%E7%AD%BE%E5%90%8D%E6%89%93%E5%8C%85%E6%88%90apk/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native进行签名打包成Apk&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E5%BA%93%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7upgrading%E4%B8%8E%E9%99%8D%E7%BA%A7%E8%AE%B2%E8%A7%A3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native库版本升级(Upgrading)与降级讲解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;控件资料：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bview%E8%A7%86%E5%9B%BE%E8%AE%B2%E8%A7%A3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之View视图讲解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Btext%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之Text组件讲解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bimage%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A3%E4%B8%8E%E7%BE%8E%E5%9B%A2%E9%A6%96%E9%A1%B5%E9%A1%B6%E9%83%A8%E6%95%88/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之Image组件讲解与美团首页顶部效果实例(10)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Btextinput%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A3%E4%B8%8Eqq%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E5%AE%9E%E7%8E%B011/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之TextInput组件讲解与QQ登录界面实现(11)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bprogressbarandroid%E8%BF%9B%E5%BA%A6%E6%9D%A1%E8%AE%B2%E8%A7%A312/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之ProgressBarAndroid进度条讲解(12)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bdrawerlayoutandroid%E6%8A%BD%E5%B1%89%E5%AF%BC%E8%88%AA%E5%88%87%E6%8D%A2%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A313/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之DrawerLayoutAndroid抽屉导航切换组件讲解(13)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bscrollview%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A314/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之ScrollView组件讲解(14)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Btoolbarandroid%E5%B7%A5%E5%85%B7%E6%A0%8F%E6%8E%A7%E4%BB%B6%E8%AE%B2%E8%A7%A3%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A8/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之ToolbarAndroid工具栏控件讲解以及使用(15)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bswitch%E4%B8%8Epicker%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A3%E4%BB%A5%E5%8F%8A%E4%BD%BF%E7%94%A816/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之Switch与Picker组件讲解以及使用(16)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bviewpagerandroid%E8%AE%B2%E8%A7%A3%E4%BB%A5%E5%8F%8A%E7%BE%8E%E5%9B%A2%E9%A6%96%E9%A1%B5%E9%A1%B6%E9%83%A8/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之ViewPagerAndroid讲解以及美团首页顶部效果实例(17)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Btouchable%E7%B3%BB%E5%88%97%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A318/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之Touchable*系列组件详解(18)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Blistview%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A3%E4%BB%A5%E5%8F%8A%E8%AF%A6%E7%BB%86%E5%AE%9E%E4%BE%8B19/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之ListView组件讲解以及详细实例(19)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E8%B6%85%E6%A3%92%E7%9A%84layoutanimation%E5%B8%83%E5%B1%80%E5%8A%A8%E7%94%BB/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native超棒的LayoutAnimation(布局动画)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bpulltorefreshviewandroid%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A320/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之PullToRefreshViewAndroid下拉刷新组件讲解(20)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Brefreshcontrol%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A321/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之RefreshControl组件详解(21)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bwebview%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3%E4%BB%A5%E5%8F%8A%E5%AE%9E%E4%BE%8B%E4%BD%BF%E7%94%A822/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之WebView组件详解以及实例使用(22)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8B%E7%BB%84%E4%BB%B6%E5%B0%81%E8%A3%85%E5%AE%9E%E4%BE%8Bbutton%E6%8C%89%E9%92%AE/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之组件封装实例(Button按钮)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bnavigator%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3%E4%BB%A5%E5%8F%8A%E5%AE%9E%E4%BE%8B23/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之Navigator组件详解以及实例(23)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Btoastandroid%E8%AF%A6%E8%A7%A3%E5%8F%8A%E4%BD%BF%E7%94%A824/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之ToastAndroid详解及使用(24)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Balert%E5%BC%B9%E5%87%BA%E6%A1%86%E8%AF%A6%E8%A7%A3%E5%8F%8A%E4%BD%BF%E7%94%A825/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之Alert弹出框详解及使用(25)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Bappstate%E8%AF%A6%E8%A7%A326/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之AppState详解(26)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E6%8E%A7%E4%BB%B6%E4%B9%8Bcilpboard%E7%B2%98%E8%B4%B4%E6%9D%BF%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A327/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native 控件之Cilpboard粘贴板使用详解(27)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97dimensions%E5%B1%8F%E5%B9%95%E5%AE%BD%E9%AB%98%E8%AF%A6%E8%A7%A330/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块Dimensions屏幕宽高详解(30)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97backandroid%E6%8B%A6%E6%88%AA%E8%BF%94%E5%9B%9E%E9%94%AE%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E8%AF%A6%E8%A7%A331/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块BackAndroid拦截返回键事件处理详解(31)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native-api%E6%A8%A1%E5%9D%97stylesheet%E6%A0%B7%E5%BC%8F%E8%A1%A8%E8%AF%A6%E8%A7%A332/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块StyleSheet样式表详解(32)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97pixelratio%E8%AE%BE%E5%A4%87%E5%83%8F%E7%B4%A0%E5%AF%86%E5%BA%A6%E8%AF%A6%E8%A7%A333/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块PixelRatio设备像素密度详解(33)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bdatepickerandroid%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E9%80%89%E6%8B%A9%E5%99%A8%E7%BB%84%E4%BB%B6%E8%AE%B2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之DatePickerAndroid时间日期选择器组件讲解(34)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bstatusbar%E7%8A%B6%E6%80%81%E6%A0%8F%E8%AF%A6%E8%A7%A335/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之StatusBar状态栏详解(35)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Balertios%E5%BC%B9%E6%A1%86%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dios%E5%BC%80%E5%8F%9136/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之AlertIOS弹框详解-适配iOS开发(36)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E6%8E%A7%E4%BB%B6%E4%B9%8Bpickerios%E9%80%89%E6%8B%A9%E5%99%A8%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dios%E5%BC%80%E5%8F%9137/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之PickerIOS选择器详解-适配iOS开发(37)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E6%8E%A7%E4%BB%B6%E4%B9%8Bsegmentedcontrolios%E5%88%86%E6%AE%B5%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dios%E5%BC%80/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native 控件之SegmentedControlIOS分段组件详解-适配iOS开发(38)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bsliderios%E6%BB%91%E5%9D%97%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dios%E5%BC%80%E5%8F%9139/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之SliderIOS滑块组件详解-适配iOS开发(39)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Btimepickerandroid%E6%97%B6%E9%97%B4%E9%80%89%E6%8B%A9%E5%99%A8%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3%E5%8F%8A/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之TimePickerAndroid时间选择器组件详解及实例(43)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Bappstateios%E8%BF%90%E8%A1%8C%E7%8A%B6%E6%80%81%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dios%E5%BC%80%E5%8F%9144/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之AppStateIOS运行状态详解-适配iOS开发(44)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Bactionsheetios%E5%8F%AF%E7%82%B9%E5%87%BB%E5%BC%B9%E6%A1%86%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dios%E5%BC%80/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之ActionSheetIOS可点击弹框详解-适配iOS开发(45)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Bvibration%E6%8E%A7%E5%88%B6%E8%AE%BE%E5%A4%87%E9%9C%87%E5%8A%A8%E8%AF%A6%E8%A7%A346/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之Vibration控制设备震动详解(46)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E7%89%B9%E5%AE%9A%E5%B9%B3%E5%8F%B0%E4%BB%A3%E7%A0%81%E8%AF%B4%E6%98%8E47/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native特定平台代码说明(47)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Bappregistry%E5%BA%94%E7%94%A8%E6%B3%A8%E5%86%8C%E5%85%A5%E5%8F%A3%E8%AF%A6%E8%A7%A348/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之AppRegistry应用注册入口详解(48)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E5%9F%BA%E7%A1%80%E4%B9%8Blinking-libraries%E9%93%BE%E6%8E%A5%E5%BA%93%E9%85%8D%E7%BD%AE-%E9%80%82%E9%85%8Dios%E5%BC%80%E5%8F%9149/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native基础之Linking Libraries链接库配置-适配iOS开发(49)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E5%9F%BA%E7%A1%80%E4%B9%8B%E7%9C%9F%E6%9C%BA%E8%AE%BE%E5%A4%87%E8%BF%90%E8%A1%8C%E8%B0%83%E8%AF%95%E5%BA%94%E7%94%A8-%E9%80%82%E9%85%8Dios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native基础之真机设备运行调试应用-适配iOS开发(50)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%8E%9F%E7%94%9F%E6%A8%A1%E5%9D%97%E7%BB%84%E4%BB%B6%E5%B0%81%E8%A3%85%E5%9F%BA%E7%A1%80%E7%AF%871-%E9%80%82/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native进阶之原生模块封装基础篇1-适配Android开发(51)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E5%9F%BA%E7%A1%80%E4%B9%8B%E4%BB%8E%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dandroid%E5%BC%80/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native基础之从源代码编译详解-适配Android开发(52)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%8E%9F%E7%94%9F%E6%A8%A1%E5%9D%97%E7%89%B9%E6%80%A7%E7%AF%87%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dandroid/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native进阶之原生模块特性篇详解-适配Android开发(53)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%8E%9F%E7%94%9Fui%E7%BB%84%E4%BB%B6%E5%B0%81%E8%A3%85%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dandroid%E5%BC%80/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native进阶之原生UI组件封装详解-适配Android开发(54)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%A8%A1%E5%9D%97%E4%B9%8Blinking%E8%AF%A6%E8%A7%A3%E4%BB%A5%E5%8F%8A%E5%AE%9E%E4%BE%8B-androidios%E5%8F%8C%E5%B9%B3%E5%8F%B0%E9%80%9A/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native模块之Linking详解以及实例-Android/iOS双平台通用(55)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E6%8E%A7%E4%BB%B6%E4%B9%8Bmodal%E8%AF%A6%E8%A7%A3-androidios%E5%8F%8C%E5%B9%B3%E5%8F%B0%E9%80%9A%E7%94%A856/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native 控件之Modal详解-Android/iOS双平台通用(56)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E7%A7%BB%E6%A4%8D%E5%8E%9F%E7%94%9Fios%E9%A1%B9%E7%9B%AE57/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native 移植原生iOS平台项目(57)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%8E%9F%E7%94%9F%E6%B7%B7%E5%90%88%E4%B8%8E%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%BC%80%E5%8F%91%E8%AF%A6/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native 进阶之原生混合与数据通信开发详解-适配Android开发(58)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%8E%9F%E7%94%9F%E6%A8%A1%E5%9D%97%E5%B0%81%E8%A3%85%E5%9F%BA%E7%A1%80%E7%AF%87%E8%AF%A6%E8%A7%A3-%E9%80%82/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native进阶之原生模块封装基础篇详解-适配iOS开发(59)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%8E%9F%E7%94%9F%E6%A8%A1%E5%9D%97%E5%B0%81%E8%A3%85%E7%89%B9%E6%80%A7%E7%AF%87%E8%AF%A6%E8%A7%A3-%E9%80%82/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native进阶之原生模块封装特性篇详解-适配iOS开发(60)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%8E%9F%E7%94%9F%E6%B7%B7%E5%90%88%E4%B8%8E%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%BC%80%E5%8F%91%E8%AF%A6%E8%A7%A3-%E9%80%82%E9%85%8Dios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native 进阶之原生混合与数据通信开发详解-适配iOS开发(61)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Blayoutanimation%E5%B8%83%E5%B1%80%E5%8A%A8%E7%94%BB%E8%AF%A6%E8%A7%A3-androidios%E9%80%9A%E7%94%A862/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之LayoutAnimation布局动画详解-Android/iOS通用(62)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E5%9F%BA%E7%A1%80%E4%B9%8B%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E4%BB%8B%E7%BB%8D-core-components63/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native基础之核心组件使用教程介绍-Core Components(63)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E8%BF%9B%E9%98%B6%E4%B9%8Banimated%E5%8A%A8%E7%94%BB%E5%BA%93%E8%AF%A6%E8%A7%A3-%E5%9F%BA%E7%A1%80%E7%AF%8764/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native进阶之Animated动画库详解-基础篇(64)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E8%BF%9B%E9%98%B6%E4%B9%8Banimated%E5%8A%A8%E7%94%BB%E5%BA%93%E8%AF%A6%E8%A7%A3-%E5%AE%9E%E4%BE%8B%E7%AF%8765/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native进阶之Animated动画库详解-实例篇(65)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%A8%A1%E5%9D%97%E4%B9%8Binteractionmanager%E4%BA%A4%E4%BA%92%E7%AE%A1%E7%90%86%E5%99%A8%E8%AF%A6%E8%A7%A366/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native模块之InteractionManager(交互管理器)详解(66)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%A8%A1%E5%9D%97%E4%B9%8Btimers%E5%AE%9A%E6%97%B6%E5%99%A8%E8%AF%A6%E8%A7%A367/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native模块之Timers(定时器)详解(67)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%A8%A1%E5%9D%97%E4%B9%8Bshare%E8%B0%83%E7%94%A8%E7%B3%BB%E7%BB%9F%E5%88%86%E4%BA%AB%E5%BA%94%E7%94%A8%E8%AF%A6%E8%A7%A368/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native模块之Share调用系统分享应用详解(68)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%A8%A1%E5%9D%97%E4%B9%8Bpermissionandroid%E6%9D%83%E9%99%90%E6%A3%80%E6%B5%8B%E4%B8%8E%E8%AF%B7%E6%B1%82%E5%BA%94%E7%94%A8%E8%AF%A6/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native模块之PermissionsAndroid权限检测与请求应用详解(69)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E5%9F%BA%E7%A1%80%E4%B9%8Bprops%E5%B1%9E%E6%80%A7%E4%B8%8Estate%E7%8A%B6%E6%80%81%E4%BD%BF%E7%94%A8%E8%AE%B2%E8%A7%A370/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native 基础之Props(属性)与State(状态)使用讲解(70)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-%E5%9F%BA%E7%A1%80%E4%B9%8Bstyle%E6%A0%B7%E5%BC%8F%E8%AE%B2%E8%A7%A371/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native 基础之Style(样式)讲解(71)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lcode.org/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%B0%E7%8E%8B%E8%80%85-realm-react-native%E7%89%88%E6%9C%AC%E5%BA%94%E7%94%A8%E8%AF%A6%E8%A7%A3%E4%B9%8B%E6%8A%9B%E7%A0%96%E5%BC%95%E7%8E%89/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移动端数据库新王者-Realm React Native版本应用详解之抛砖引玉入坑篇(一)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%B0%E7%8E%8B%E8%80%85-realm-react-native%E7%89%88%E6%9C%AC%E5%BA%94%E7%94%A8%E8%AF%A6%E8%A7%A3%E4%B9%8B%E7%95%A5%E9%99%88%E5%9B%BA%E9%99%8B/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移动端数据库新王者-Realm React Native版本应用详解之略陈固陋爬坡篇(二)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%B0%E7%8E%8B%E8%80%85-realm-react-native%E7%89%88%E6%9C%AC%E5%BA%94%E7%94%A8%E8%AF%A6%E8%A7%A3%E4%B9%8B%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移动端数据库新王者-Realm React Native版本应用详解之略陈固陋爬坡篇续1(三)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React Native技术文章：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/319-react-native-sh-ppt-jiangqq/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[319-React Native上海交流会报告]-React Native跨平台开发之旅PPT内容(附下载链接)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-developer-zong/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开发阶段性总结(2016-5-20)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/rn%E5%AE%9E%E6%88%98-%E5%98%8E%E5%98%8E%E5%95%86%E5%9F%8E%E4%B9%8B%E4%BB%BF%E5%BF%AB%E9%80%92%E6%97%B6%E9%97%B4%E8%BD%B4%E5%B8%83%E5%B1%80%E5%AE%9E%E7%8E%B0%E8%AE%A2%E5%8D%95%E7%8A%B6%E6%80%81/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[RN实战-嘎嘎商城]之仿快递时间轴布局实现(订单状态)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/rn%E5%AE%9E%E6%88%98-%E5%98%8E%E5%98%8E%E5%95%86%E5%9F%8E%E4%B9%8B%E8%BD%BB%E6%9D%BE%E5%AE%9E%E7%8E%B0tab%E5%BA%95%E9%83%A8%E8%8F%9C%E5%8D%95%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%88%87%E6%8D%A2%E6%95%88/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[RN实战-嘎嘎商城]之轻松实现Tab底部菜单导航栏切换效果-Android/iOS双适配&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/rn%E5%AE%9E%E6%88%98-%E5%98%8E%E5%98%8E%E5%95%86%E5%9F%8E%E4%B9%8B%E5%95%86%E5%AE%B6%E8%AF%A6%E6%83%85%E7%95%8C%E9%9D%A2%E5%B8%83%E5%B1%80%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9E%E7%8E%B0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[RN实战-嘎嘎商城]之商家详情界面布局分析与实现&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/rn%E5%AE%9E%E6%88%98-%E5%98%8E%E5%98%8E%E5%95%86%E5%9F%8E%E4%B9%8B%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%A1%B9%E7%9B%AEredux%E9%87%8D%E6%9E%84/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[RN实战-嘎嘎商城]之记一次项目Redux重构&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8E%9F%E7%94%9Fui%E7%BB%84%E4%BB%B6%E5%92%8Cvideoview%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native实战系列教程之自定义原生UI组件和VideoView视频播放器开发&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React Native开源控件：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-chart-android/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源图表组件(react-native-chart-android)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-material-design/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源Material Design组件(react-native-material-design)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/source-react-native-qrcode/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native二维码图片生成组件(react-native-qrcode)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-menu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native下拉菜单组件(react-native-menu)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-image-cropping-ios/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源图片裁剪组件(react-native-image-cropping-ios)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-sk-toast/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源仿照Android平台的Toast组件(react-native-sk-toast)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-android-tabbar/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[荐]React Native开源Android平台的TabBar效果组件(react-native-android-tabbar)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-viewpager-race/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源广告轮播组件(react-native-viewpager)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-amap-location/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源高德地图定位组件(react-native-amap-location)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-baidumap-kit/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源百度地图组件(react-native-baidumap-kit)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-device-info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源获取设备信息组件(react-native-device-info)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-networking/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源网络处理-上传下载组件(react-native-networking)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-bootstrap-buttons/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源bootstrap风格按钮组件(react-native-bootstrap-buttons)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-datetime/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源时间日期选择器组件(react-native-datetime)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-google-maps/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源封装Google地图组件(react-native-google-maps)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-ios-charts/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源iOS图表组件(react-native-ios-charts)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-android-imagepicker/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源图片选择器组件(react-native-android-imagepicker)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-vlc-player/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源VLC多媒体播放器组件(react-native-vlc-player)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-sqlite-storage/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源SQLite数据库组件(react-native-sqlite-storage)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-image-zoom/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源图片缩放处理组件(react-native-image-zoom)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-xmpp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源即时聊天XMPP IM组件(react-native-xmpp)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-pdf/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源PDF阅读器组件(react-native-pdf)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-swipeout/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源仿QQ微信列表左右滑动删除等功能组件(react-native-swipeout)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-video/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[译]React Native开源播放器Video组件(react-native-video)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-encryption-library/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源封装AES,MD5加密模块(react-native-encryption-library)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E8%B6%85%E8%AF%A6%E7%BB%86react-native%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E6%9C%8B%E5%8F%8B%E5%9C%88%E5%88%86%E4%BA%AB%E5%8A%9F%E8%83%BD-androidios%E5%8F%8C%E5%B9%B3%E5%8F%B0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;超详细React Native实现微信好友/朋友圈分享功能-Android/iOS双平台通用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React Native开源项目：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-lagou-source/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-仿拉勾网iOS客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/uestc-bbs-react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-清水河畔BBS客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-meituan-source/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-仿美团iOS客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE-%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5%E5%AE%A2%E6%88%B7%E7%AB%AF/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-知乎日报客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-dou-source/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-豆瓣搜索客户端(基于豆瓣Open API)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-news-source/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-新闻客户端(News)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-manong/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-码农客户端(iOS版本)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-hacker/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-Hacker新闻客户端(Android和iOS)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-gitfeed/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-Github客户端(Android、iOS)-来自阿里开发人员&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-zixunapp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-iOS资讯头条APP&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-weibo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-iOS新浪微博客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-lagou-duo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-仿拉勾网客户端(兼容Android、iOS平台)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-cnode/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-CNode论坛客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-gankio/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-干货集中营客户端(Gank.io)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-memory/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-知识点记忆客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-bbc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-BBC新闻客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-gitosc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-开源中国Git@OSC客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-maoyan/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-仿猫眼电影客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/study-react-native-opensource-one/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习React Native必看的几个开源项目(第一波)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/study-react-native-opensource-two/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习React Native必看的几个开源项目(第二波)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-movie-fetcher/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;带大家一步步开发一个电影数据的App(Movie Fetcher)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-office/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-公司移动OA办公客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-marvel/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-漫威电影客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-bizhi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-图片展示客户端RN-BiZhi&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-bilibili/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-仿B站客户端(Android)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-gagamall/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-嘎嘎商城客户端(持续更新中)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-yunfanyi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-云翻译客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-daidai/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-贷贷助手客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-baobao/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-仿宝宝健康客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-source-health/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-健康养生客户端&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/eact-native-source-bbs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native开源项目-小BBS客户端&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;React Native工具插件：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/vscode-react-native-tools/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native VSCode IDE超强开发插件介绍(智能,代码提醒,运行调试…)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Bnetinfo%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A328/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之NetInfo(网络信息)使用详解(28)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native-api%E6%A8%A1%E5%9D%97%E4%B9%8Basyncstorage%E6%8C%81%E4%B9%85%E5%8C%96%E5%AD%98%E5%82%A8%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A329/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native API模块之AsyncStorage(持久化存储)使用详解(29)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Btabbarios%E5%92%8Ctabbarios-item%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3%E5%8F%8A%E5%AE%9E%E4%BE%8B40/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之TabBarIOS和TabBarIOS.Item组件详解及实例(40)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bprogressviewios%E8%BF%9B%E5%BA%A6%E5%8A%A0%E8%BD%BD%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3%E5%8F%8A%E5%AE%9E/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之ProgressViewIOS进度加载组件详解及实例(41)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Bactivityindicatorios%E8%BF%9B%E5%BA%A6%E6%8C%87%E7%A4%BA%E5%99%A8%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3%E5%8F%8A/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【React Native开发】React Native控件之ActivityIndicatorIOS进度指示器组件详解及实例(42)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编译其它React Native项目：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E8%B6%85%E8%AF%A6%E7%BB%86windows%E7%89%88%E6%9C%AC%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8Creact-native%E5%AE%98%E6%96%B9%E5%AE%9E%E4%BE%8Buiexplorer%E9%A1%B9%E7%9B%AE%E5%A4%9A%E5%9B%BE%E6%85%8E/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;超详细Windows版本编译运行React Native官方实例UIExplorer项目(多图慎入)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;疑难汇总：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/react-native%E7%96%91%E9%9A%BE%E7%82%B9%E9%97%AE%E9%A2%98%E6%B7%B1%E5%9D%91%E6%9C%80%E5%BC%BA%E6%80%BB%E7%BB%93%E5%B8%96%E4%B8%8D%E6%96%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native疑难点,问题深坑最强总结帖(不断更新中)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Android Studio项目配置：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E4%BC%98%E9%9B%85%E7%9A%84android-studio%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE-%E5%B8%B8%E7%94%A8%E5%BA%93%E5%92%8C%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;优雅的Android Studio项目配置–常用库和版本管理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Android控件资料：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/design%E6%94%AF%E6%8C%81%E5%BA%93tablayout%E6%89%93%E9%80%A0%E4%BB%BF%E7%BD%91%E6%98%93%E6%96%B0%E9%97%BBtab%E6%A0%87%E7%AD%BE%E6%95%88%E6%9E%9C/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Design支持库TabLayout打造仿网易新闻Tab标签效果&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E6%89%93%E9%80%A0qq6-x%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%E4%BE%A7%E6%BB%91%E7%95%8C%E9%9D%A2%E6%95%88%E6%9E%9C%E5%AE%9E%E4%BE%8B/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;打造QQ6.X最新版本侧滑界面效果实例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;工具技术：&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E5%B9%B2%E8%B4%A7%E5%88%86%E4%BA%AB%E5%88%86%E6%9E%90android%E5%BA%94%E7%94%A8%E4%BD%BF%E7%94%A8%E7%9A%84%E6%8A%80%E6%9C%AF%E6%A1%86%E6%9E%B6%E5%92%8C%E5%BC%80%E6%BA%90%E5%BA%93/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;干货分享:分析Android应用使用的技术框架和开源库&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.lcode.org/%E5%AE%9E%E6%97%B6%E6%B6%88%E6%81%AFjetbrains%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83kotlin-1-0%EF%BC%8Cjvm%E5%92%8Candroid%E4%B8%8A%E6%9B%B4%E5%A5%BD%E7%94%A8%E7%9A%84%E8%AF%AD%E8%A8%80/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实时消息:JetBrains正式发布Kotlin 1.0，JVM和Android上更好用的语言&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录React Native 从环境搭建、签名打包等等一些资料。&lt;/p&gt;
&lt;h2 id=&quot;React-Native进行签名打包成Apk&quot;&gt;&lt;a href=&quot;#React-Native进行签名打包成Apk&quot; class=&quot;headerlink&quot; title=&quot;React 
    
    </summary>
    
      <category term="ReactNative" scheme="http://xiaoqianchang.github.io/categories/ReactNative/"/>
    
    
      <category term="ReactNative" scheme="http://xiaoqianchang.github.io/tags/ReactNative/"/>
    
      <category term="学习资料" scheme="http://xiaoqianchang.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>在Windows下搭建React Native Android开发环境</title>
    <link href="http://xiaoqianchang.github.io/2017/02/25/%E5%9C%A8Windows%E4%B8%8B%E6%90%AD%E5%BB%BAReact%20Native%20Android%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://xiaoqianchang.github.io/2017/02/25/在Windows下搭建React Native Android开发环境/</id>
    <published>2017-02-25T12:31:36.000Z</published>
    <updated>2017-02-26T07:02:43.265Z</updated>
    
    <content type="html">&lt;h2 id=&quot;安装git-for-windows&quot;&gt;&lt;a href=&quot;#安装git-for-windows&quot; class=&quot;headerlink&quot; title=&quot;安装git for windows&quot;&gt;&lt;/a&gt;安装git for windows&lt;/h2&gt;&lt;p&gt;在&lt;a href=&quot;https://git-for-windows.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;下载安装，&lt;code&gt;安装过程中注意选择&amp;quot;Run Git from Windows Command Prompt&amp;quot;。&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装Python&quot;&gt;&lt;a href=&quot;#安装Python&quot; class=&quot;headerlink&quot; title=&quot;安装Python&quot;&gt;&lt;/a&gt;安装Python&lt;/h2&gt;&lt;p&gt;从&lt;a href=&quot;https://www.python.org/downloads/release/python-2710/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;下载并安装python 2.7.x（3.x版本不行）&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;安装node-js&quot;&gt;&lt;a href=&quot;#安装node-js&quot; class=&quot;headerlink&quot; title=&quot;安装node.js&quot;&gt;&lt;/a&gt;安装node.js&lt;/h2&gt;&lt;p&gt;从&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;下载node.js的官方4.1版本或更高版本。&lt;/p&gt;
&lt;p&gt;建议设置npm镜像以加速后面的过程（或使用科学上网工具）。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; registry https://registry.npm.taobao.org --global&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; disturl https://npm.taobao.org/dist --global&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装react-native命令行工具&quot;&gt;&lt;a href=&quot;#安装react-native命令行工具&quot; class=&quot;headerlink&quot; title=&quot;安装react-native命令行工具&quot;&gt;&lt;/a&gt;安装react-native命令行工具&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g react-native-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装react native模块以及相关node模块&lt;code&gt;npm install  --save react-native&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;创建项目&quot;&gt;&lt;a href=&quot;#创建项目&quot; class=&quot;headerlink&quot; title=&quot;创建项目&quot;&gt;&lt;/a&gt;创建项目&lt;/h2&gt;&lt;p&gt;进入你的工作目录，运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;react-native init MyProject
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;并耐心等待数（或数十）分钟。&lt;/p&gt;
&lt;h2 id=&quot;运行packager&quot;&gt;&lt;a href=&quot;#运行packager&quot; class=&quot;headerlink&quot; title=&quot;运行packager&quot;&gt;&lt;/a&gt;运行packager&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;react-native start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以用浏览器访问&lt;a href=&quot;http://localhost:8081/index.android.bundle?platform=android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8081/index.android.bundle?platform=android&lt;/a&gt; 看看是否可以看到打包后的脚本（看到很长的js代码就对了）。第一次访问通常需要十几秒，并且在packager的命令行可以看到形如[====]的进度条。&lt;/p&gt;
&lt;p&gt;如果你遇到了&lt;code&gt;ERROR Watcher took too long to load&lt;/code&gt;的报错，请尝试修改&lt;code&gt;node_modules/react-native/packager/react-packager/src/FileWatcher/index.js&lt;/code&gt;，将其中的MAX_WAIT_TIME 从25000改为更大的值（单位是毫秒）&lt;/p&gt;
&lt;h2 id=&quot;运行模拟器&quot;&gt;&lt;a href=&quot;#运行模拟器&quot; class=&quot;headerlink&quot; title=&quot;运行模拟器&quot;&gt;&lt;/a&gt;运行模拟器&lt;/h2&gt;&lt;p&gt;推荐使用Genymotion。&lt;br&gt;如果有真机，可以不必运行模拟器，要配置好驱动，使得adb devices可以看到对应的设备。&lt;/p&gt;
&lt;h2 id=&quot;安卓运行&quot;&gt;&lt;a href=&quot;#安卓运行&quot; class=&quot;headerlink&quot; title=&quot;安卓运行&quot;&gt;&lt;/a&gt;安卓运行&lt;/h2&gt;&lt;p&gt;&lt;code&gt;保持packager开启&lt;/code&gt;，另外打开一个命令行窗口，然后在工程目录下运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;react-native run-android
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;首次运行需要等待数分钟并从网上下载gradle依赖。（这个过程屏幕上可能出现很多小数点，表示下载进度。这个时间可能耗时很久，也可能会不停报错链接超时、连接中断等等——取决于你的网络状况和墙的不特定阻断。总之要顺利下载，请使用稳定有效的科学上网工具。）&lt;/p&gt;
&lt;p&gt;运行完毕后可以在模拟器或真机上看到应用自动启动了。&lt;/p&gt;
&lt;p&gt;如果apk安装运行出现报错，&lt;code&gt;请检查上文中安装SDK的环节里所有依赖是否都已装全，platform-tools是否已经设到了PATH环境变量中，运行adb devices能否看到设备&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;至此，&lt;code&gt;应该能看到APP红屏报错，这是正常的，我们还需要让app能够正确访问pc端的packager服务&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;摇晃设备或按Menu键（Bluestacks模拟器按键盘上的菜单键，通常在右Ctrl的左边 或者左Windows键旁边），可以打开调试菜单，点击Dev Settings，选Debug server host for device，输入你的&lt;code&gt;正在运行packager的那台电脑的局域网IP加:8081&lt;/code&gt;（同时要保证手机和电脑在同一网段，且没有防火墙阻拦），再按back键返回，再按Menu键，在调试菜单中选择Reload JS，就应该可以看到运行的结果了。&lt;/p&gt;
&lt;p&gt;如果真实设备白屏但没有弹出任何报错，可以在安全中心里看看是不是应用的“悬浮窗”的权限被禁止了。&lt;/p&gt;
&lt;h2 id=&quot;安卓调试&quot;&gt;&lt;a href=&quot;#安卓调试&quot; class=&quot;headerlink&quot; title=&quot;安卓调试&quot;&gt;&lt;/a&gt;安卓调试&lt;/h2&gt;&lt;p&gt;打开Chrome，访问 &lt;a href=&quot;http://localhost:8081/debugger-ui，&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8081/debugger-ui，&lt;/a&gt; 应当能看到一个页面。按F12打开开发者菜单。&lt;/p&gt;
&lt;p&gt;在模拟器或真机菜单中选择Debug JS，即可开始调试。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装git-for-windows&quot;&gt;&lt;a href=&quot;#安装git-for-windows&quot; class=&quot;headerlink&quot; title=&quot;安装git for windows&quot;&gt;&lt;/a&gt;安装git for windows&lt;/h2&gt;&lt;p&gt;在&lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;这里&lt;/a&gt;下载安装，&lt;code&gt;安装过程中注意选择&amp;quot;Run Git from Windows Command Prompt&amp;quot;。&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装Python&quot;&gt;&lt;a href=&quot;#安装Python&quot; class=&quot;headerlink&quot; title=&quot;安装Python&quot;&gt;&lt;/a&gt;安装Python&lt;/h2&gt;&lt;p&gt;从&lt;a href=&quot;https://www.python.org/downloads/release/python-2710/&quot;&gt;官网&lt;/a&gt;下载并安装python 2.7.x（3.x版本不行）&lt;/p&gt;
    
    </summary>
    
      <category term="ReactNative" scheme="http://xiaoqianchang.github.io/categories/ReactNative/"/>
    
    
      <category term="ReactNative" scheme="http://xiaoqianchang.github.io/tags/ReactNative/"/>
    
      <category term="环境搭建" scheme="http://xiaoqianchang.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>反射基本用法</title>
    <link href="http://xiaoqianchang.github.io/2016/03/30/reflex-base1/"/>
    <id>http://xiaoqianchang.github.io/2016/03/30/reflex-base1/</id>
    <published>2016-03-30T03:31:44.000Z</published>
    <updated>2016-04-01T02:38:26.212Z</updated>
    
    <content type="html">&lt;p&gt;这里介绍Java里反射的一些基本方法使用。&lt;/p&gt;
&lt;h2 id=&quot;创建class的三种方式&quot;&gt;&lt;a href=&quot;#创建class的三种方式&quot; class=&quot;headerlink&quot; title=&quot;创建class的三种方式&quot;&gt;&lt;/a&gt;创建class的三种方式&lt;/h2&gt;&lt;h3 id=&quot;类型-class&quot;&gt;&lt;a href=&quot;#类型-class&quot; class=&quot;headerlink&quot; title=&quot;类型.class&quot;&gt;&lt;/a&gt;类型.class&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class c1 = Person.class;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Class-forName&quot;&gt;&lt;a href=&quot;#Class-forName&quot; class=&quot;headerlink&quot; title=&quot;Class.forName&quot;&gt;&lt;/a&gt;Class.forName&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class c2 = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.changxiao.Person&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;对象-getClass&quot;&gt;&lt;a href=&quot;#对象-getClass&quot; class=&quot;headerlink&quot; title=&quot;对象.getClass&quot;&gt;&lt;/a&gt;对象.getClass&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Person p = new Person(&lt;span class=&quot;string&quot;&gt;&quot;张三&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;男&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class c3 = p.getClass();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;获取类名&quot;&gt;&lt;a href=&quot;#获取类名&quot; class=&quot;headerlink&quot; title=&quot;获取类名&quot;&gt;&lt;/a&gt;获取类名&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Person.class.getSimpleName(); // 获取类名：Person&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.class.getName(); // 获取完整类名：com.changxiao.Person&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;属性操作&quot;&gt;&lt;a href=&quot;#属性操作&quot; class=&quot;headerlink&quot; title=&quot;属性操作&quot;&gt;&lt;/a&gt;属性操作&lt;/h2&gt;&lt;p&gt;获取Class：&lt;code&gt;Class pc = Class.forName(&amp;quot;com.changxiao.Person&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取所有可见-非private-属性&quot;&gt;&lt;a href=&quot;#获取所有可见-非private-属性&quot; class=&quot;headerlink&quot; title=&quot;获取所有可见(非private)属性&quot;&gt;&lt;/a&gt;获取所有可见(非private)属性&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Field[] fields = pc.getFields();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取所有已声明属性-已声明表示在自己类中声明的任何属性&quot;&gt;&lt;a href=&quot;#获取所有已声明属性-已声明表示在自己类中声明的任何属性&quot; class=&quot;headerlink&quot; title=&quot;获取所有已声明属性(已声明表示在自己类中声明的任何属性)&quot;&gt;&lt;/a&gt;获取所有已声明属性(已声明表示在自己类中声明的任何属性)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Field[] allFields = pc.getDeclaredFields();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取指定的可见的属性&quot;&gt;&lt;a href=&quot;#获取指定的可见的属性&quot; class=&quot;headerlink&quot; title=&quot;获取指定的可见的属性&quot;&gt;&lt;/a&gt;获取指定的可见的属性&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// name 非private&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Field f1 = pc.getField(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：如果name是private的，则会出现&lt;code&gt;java.lang.NoSuchFieldException&lt;/code&gt;异常&lt;/p&gt;
&lt;h3 id=&quot;获取指定的属性&quot;&gt;&lt;a href=&quot;#获取指定的属性&quot; class=&quot;headerlink&quot; title=&quot;获取指定的属性&quot;&gt;&lt;/a&gt;获取指定的属性&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Field f2 = pc.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;gender&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：如果gender为private则必须要设置&lt;code&gt;f2.setAccessible(true);&lt;/code&gt;&lt;br&gt;如果没有设置后面的属性会出现&lt;code&gt;java.lang.IllegalAccessException&lt;/code&gt;异常&lt;/p&gt;
&lt;h2 id=&quot;对方法操作&quot;&gt;&lt;a href=&quot;#对方法操作&quot; class=&quot;headerlink&quot; title=&quot;对方法操作&quot;&gt;&lt;/a&gt;对方法操作&lt;/h2&gt;&lt;h3 id=&quot;获取所有可见的方法&quot;&gt;&lt;a href=&quot;#获取所有可见的方法&quot; class=&quot;headerlink&quot; title=&quot;获取所有可见的方法&quot;&gt;&lt;/a&gt;获取所有可见的方法&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Method[] ms1 = pc.getMethods();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取所有已声明的方法&quot;&gt;&lt;a href=&quot;#获取所有已声明的方法&quot; class=&quot;headerlink&quot; title=&quot;获取所有已声明的方法&quot;&gt;&lt;/a&gt;获取所有已声明的方法&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Method[] ms2 = pc.getDeclaredMethods();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取可见的指定方法-参数列表必须指定-被获取方法带参数&quot;&gt;&lt;a href=&quot;#获取可见的指定方法-参数列表必须指定-被获取方法带参数&quot; class=&quot;headerlink&quot; title=&quot;获取可见的指定方法, 参数列表必须指定, 被获取方法带参数&quot;&gt;&lt;/a&gt;获取可见的指定方法, 参数列表必须指定, 被获取方法带参数&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Method m1 = pc.getMethod(&lt;span class=&quot;string&quot;&gt;&quot;setGender&quot;&lt;/span&gt;, new Class[] &amp;#123; String.class &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取可见的指定方法-参数列表必须指定-被获取方法不带参数&quot;&gt;&lt;a href=&quot;#获取可见的指定方法-参数列表必须指定-被获取方法不带参数&quot; class=&quot;headerlink&quot; title=&quot;获取可见的指定方法, 参数列表必须指定, 被获取方法不带参数&quot;&gt;&lt;/a&gt;获取可见的指定方法, 参数列表必须指定, 被获取方法不带参数&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Method m2 = pc.getMethod(&lt;span class=&quot;string&quot;&gt;&quot;getGender&quot;&lt;/span&gt;, new Class[] &amp;#123; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取已声明的指定方法&quot;&gt;&lt;a href=&quot;#获取已声明的指定方法&quot; class=&quot;headerlink&quot; title=&quot;获取已声明的指定方法&quot;&gt;&lt;/a&gt;获取已声明的指定方法&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pc.getDeclaredMethod(name, parameterTypes)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;对构造方法操作&quot;&gt;&lt;a href=&quot;#对构造方法操作&quot; class=&quot;headerlink&quot; title=&quot;对构造方法操作&quot;&gt;&lt;/a&gt;对构造方法操作&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pc.getConstructors();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pc.getConstructor(parameterTypes);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;代码展示上述用法&quot;&gt;&lt;a href=&quot;#代码展示上述用法&quot; class=&quot;headerlink&quot; title=&quot;代码展示上述用法&quot;&gt;&lt;/a&gt;代码展示上述用法&lt;/h2&gt;&lt;h3 id=&quot;反射用法&quot;&gt;&lt;a href=&quot;#反射用法&quot; class=&quot;headerlink&quot; title=&quot;反射用法&quot;&gt;&lt;/a&gt;反射用法&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 创建class的三种方式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;. 类型.class&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class c1 = Person.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;. Class.forName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class c2 = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.changxiao.Person&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;. 对象.getClass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person p = new Person(&lt;span class=&quot;string&quot;&gt;&quot;张三&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;男&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class c3 = p.getClass();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 加载出Class&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class pc = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.changxiao.Person&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取类名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String className = pc.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//-------------------对属性操作 start----------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取所有可见属性成数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Field[] fields = pc.getFields();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.toString(fields));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取所有已声明属性(已声明表示在自己类中声明的任何属性)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Field[] allFields = pc.getDeclaredFields();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.toString(allFields));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取指定的可见的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Field f1 = pc.getField(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(f1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取指定的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Field f2 = pc.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;gender&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(f2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//-------------------对属性操作 end----------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//-------------------对方法操作 start----------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取所有可见的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Method[] ms1 = pc.getMethods();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.toString(ms1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取所有已声明的方法成数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Method[] ms2 = pc.getDeclaredMethods();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(Arrays.toString(ms2));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取可见的指定方法, 参数列表必须指定, 被获取方法带参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Method m1 = pc.getMethod(&lt;span class=&quot;string&quot;&gt;&quot;setGender&quot;&lt;/span&gt;, new Class[] &amp;#123; String.class &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//// 获取可见的指定方法, 参数列表必须指定, 被获取方法不带参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Method m2 = pc.getMethod(&lt;span class=&quot;string&quot;&gt;&quot;getGender&quot;&lt;/span&gt;, new Class[] &amp;#123; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(m1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(m2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取已声明的指定名称方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// pc.getDeclaredMethod(name, parameterTypes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//-------------------对方法操作 end----------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//-------------------对构造方法操作 start----------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//pc.getConstructors()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//pc.getConstructor(parameterTypes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//-------------------对构造方法操作 end----------------------------------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;属性Field的使用&quot;&gt;&lt;a href=&quot;#属性Field的使用&quot; class=&quot;headerlink&quot; title=&quot;属性Field的使用&quot;&gt;&lt;/a&gt;属性Field的使用&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Person p = new Person(&lt;span class=&quot;string&quot;&gt;&quot;张全蛋&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;男&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class c = Person.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取指定的属性描述&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Field nameField = c.getField(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;); // name为非private&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 设置属性的访问权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Field nameField = c.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// nameField.setAccessible(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取名字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String shuXingMing = nameField.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(shuXingMing);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 设置属性的值 等同于 p.name = &lt;span class=&quot;string&quot;&gt;&quot;张三&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//		nameField.set(p, &lt;span class=&quot;string&quot;&gt;&quot;张三&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//		System.out.println(p.getName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 通过反射获取指定对象上的属性值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String nameValue = (String) nameField.get(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(nameValue);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;br&gt;name&lt;br&gt;张全蛋&lt;/p&gt;
&lt;h3 id=&quot;构造方法Constructor的使用&quot;&gt;&lt;a href=&quot;#构造方法Constructor的使用&quot; class=&quot;headerlink&quot; title=&quot;构造方法Constructor的使用&quot;&gt;&lt;/a&gt;构造方法Constructor的使用&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 获取类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class c = Person.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取无参构造方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Constructor con = c.getConstructor(new Class[]&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 根据构造方法创建对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person p = (Person) con.newInstance(new Object[] &amp;#123;&amp;#125;);	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取带参数的构造方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 基本数据类型通过封装类.TYPE来获得类别&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Constructor con = c.getConstructor(new Class[]&amp;#123;String.class,String.class,Integer.TYPE&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person p = (Person) con.newInstance(new Object[] &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;张三丰&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;男&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;&amp;#125;);	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(p); // 输出对象&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;br&gt;Person [name=张三丰, gender=男, age=800]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小知识：Integer.TYPE 输出为int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看Integer的源码：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * The &amp;#123;@code Class&amp;#125; instance representing the primitive &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;#123;@code int&amp;#125;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @since   JDK1.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static final Class&amp;lt;Integer&amp;gt;  TYPE = (Class&amp;lt;Integer&amp;gt;) Class.getPrimitiveClass(&lt;span class=&quot;string&quot;&gt;&quot;int&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;方法Method的使用&quot;&gt;&lt;a href=&quot;#方法Method的使用&quot; class=&quot;headerlink&quot; title=&quot;方法Method的使用&quot;&gt;&lt;/a&gt;方法Method的使用&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Person p1 = new Person(&lt;span class=&quot;string&quot;&gt;&quot;张全蛋&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;男&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class c = Person.class;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取指定的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Method m = c.getDeclaredMethod(&lt;span class=&quot;string&quot;&gt;&quot;eat&quot;&lt;/span&gt;, new Class[] &amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 设置可以被访问&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m.setAccessible(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 调用对应方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m.invoke(p1, new Object[] &amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 获取带参数的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Method m1 = c.getDeclaredMethod(&lt;span class=&quot;string&quot;&gt;&quot;setGender&quot;&lt;/span&gt;, new Class[] &amp;#123;String.class&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 调用对应方法传递参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m1.invoke(p1, new Object[] &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;male&quot;&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(p1.getGender());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;br&gt;male&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/jackiehff/article/details/8509075&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java反射机制&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enjoy It!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这里介绍Java里反射的一些基本方法使用。&lt;/p&gt;
&lt;h2 id=&quot;创建class的三种方式&quot;&gt;&lt;a href=&quot;#创建class的三种方式&quot; class=&quot;headerlink&quot; title=&quot;创建class的三种方式&quot;&gt;&lt;/a&gt;创建class的三种方式&lt;/h2&gt;&lt;h3 id=&quot;类型-class&quot;&gt;&lt;a href=&quot;#类型-class&quot; class=&quot;headerlink&quot; title=&quot;类型.class&quot;&gt;&lt;/a&gt;类型.class&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class c1 = Person.class;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Class-forName&quot;&gt;&lt;a href=&quot;#Class-forName&quot; class=&quot;headerlink&quot; title=&quot;Class.forName&quot;&gt;&lt;/a&gt;Class.forName&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class c2 = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.changxiao.Person&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;对象-getClass&quot;&gt;&lt;a href=&quot;#对象-getClass&quot; class=&quot;headerlink&quot; title=&quot;对象.getClass&quot;&gt;&lt;/a&gt;对象.getClass&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Person p = new Person(&lt;span class=&quot;string&quot;&gt;&quot;张三&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;男&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Class c3 = p.getClass();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java" scheme="http://xiaoqianchang.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://xiaoqianchang.github.io/tags/Java/"/>
    
      <category term="reflex" scheme="http://xiaoqianchang.github.io/tags/reflex/"/>
    
  </entry>
  
  <entry>
    <title>从网站导出SSL验证证书</title>
    <link href="http://xiaoqianchang.github.io/2016/03/28/export-SSL-certificate-from-website/"/>
    <id>http://xiaoqianchang.github.io/2016/03/28/export-SSL-certificate-from-website/</id>
    <published>2016-03-28T08:26:23.000Z</published>
    <updated>2016-03-28T08:55:21.919Z</updated>
    
    <content type="html">&lt;h2 id=&quot;chrome导出&quot;&gt;&lt;a href=&quot;#chrome导出&quot; class=&quot;headerlink&quot; title=&quot;chrome导出&quot;&gt;&lt;/a&gt;chrome导出&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在chrome打开https的网站点击前面那个小锁，&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/SSL-export1.jpg&quot; alt=&quot;1&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;点击连接选项&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/SSL-export2.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击证书信息&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/SSL-export3.jpg&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选中详细信息&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/SSL-export4.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击复制到文件&lt;br&gt;根据“证书导出向导”导出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择证书格式&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/SSL-export5.png&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一项是二进制的形式&lt;br&gt;第二项是Base64明文的形式&lt;br&gt;下一步保存到选中位置，名为*.cer&lt;/p&gt;
&lt;p&gt;其它浏览器也是同样的操作。。。&lt;/p&gt;
&lt;p&gt;Enjoy It!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;chrome导出&quot;&gt;&lt;a href=&quot;#chrome导出&quot; class=&quot;headerlink&quot; title=&quot;chrome导出&quot;&gt;&lt;/a&gt;chrome导出&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在chrome打开https的网站点击前面那个小锁，&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/SSL-export1.jpg&quot; alt=&quot;1&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="other" scheme="http://xiaoqianchang.github.io/categories/other/"/>
    
    
      <category term="导出SSL验证证书" scheme="http://xiaoqianchang.github.io/tags/%E5%AF%BC%E5%87%BASSL%E9%AA%8C%E8%AF%81%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Android插件化架构设计简述</title>
    <link href="http://xiaoqianchang.github.io/2016/03/16/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E7%AE%80%E8%BF%B0/"/>
    <id>http://xiaoqianchang.github.io/2016/03/16/Android插件化架构设计简述/</id>
    <published>2016-03-16T09:29:29.000Z</published>
    <updated>2016-03-28T08:56:09.387Z</updated>
    
    <content type="html">&lt;p&gt;近期在整理插件化方面的知识，今天以换皮肤效果的例子总结如下：&lt;/p&gt;
&lt;h2 id=&quot;插件开发好处&quot;&gt;&lt;a href=&quot;#插件开发好处&quot; class=&quot;headerlink&quot; title=&quot;插件开发好处&quot;&gt;&lt;/a&gt;插件开发好处&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;有助于协同开发，有助于功能扩展等等…&lt;/li&gt;
&lt;li&gt;如支付宝主界面都是模块分类，每一个入口就是插件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;成为插件的要求&quot;&gt;&lt;a href=&quot;#成为插件的要求&quot; class=&quot;headerlink&quot; title=&quot;成为插件的要求&quot;&gt;&lt;/a&gt;成为插件的要求&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;插件程序是不需要程序主入口的&lt;/li&gt;
&lt;li&gt;插件程序必须要遵循主程序的协议才能成为插件&lt;/li&gt;
&lt;li&gt;插件开发不管插件是图片还是功能，它们都是通过类反射来找到插件资源&lt;/li&gt;
&lt;li&gt;在manifest中具有相同的&lt;code&gt;android:sharedUserId&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;插件开发步骤&quot;&gt;&lt;a href=&quot;#插件开发步骤&quot; class=&quot;headerlink&quot; title=&quot;插件开发步骤&quot;&gt;&lt;/a&gt;插件开发步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;新建一个工程，准备图片资源&lt;/li&gt;
&lt;li&gt;新建布局文件&lt;/li&gt;
&lt;li&gt;初始化UI主键&lt;/li&gt;
&lt;li&gt;初始化popupWindow，新建popupWindow布局文件（提示框）&lt;/li&gt;
&lt;li&gt;查找插件列表&lt;/li&gt;
&lt;li&gt;显示皮肤列表&lt;/li&gt;
&lt;li&gt;加载插件资源&lt;/li&gt;
&lt;li&gt;规范插件资源协议&lt;/li&gt;
&lt;li&gt;添加插件程序&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;要用到的知识点&quot;&gt;&lt;a href=&quot;#要用到的知识点&quot; class=&quot;headerlink&quot; title=&quot;要用到的知识点&quot;&gt;&lt;/a&gt;要用到的知识点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;android基本UI组件的使用&lt;/li&gt;
&lt;li&gt;掌握android PackageManager类的基本使用(包括app的基本信息：应用程序的名称、应用程序的包名)&lt;/li&gt;
&lt;li&gt;掌握android资源加载器(资源：图片、文字、字体大小、样式)&lt;/li&gt;
&lt;li&gt;掌握如何定义插件开发协议(插件开发协议：图片命名规范、文字命名规范、类的命名规范)&lt;/li&gt;
&lt;li&gt;掌握java类反射机制&lt;/li&gt;
&lt;li&gt;掌握android shareuserid的使用&lt;/li&gt;
&lt;li&gt;掌握android 插件架构设计&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;主程序&quot;&gt;&lt;a href=&quot;#主程序&quot; class=&quot;headerlink&quot; title=&quot;主程序&quot;&gt;&lt;/a&gt;主程序&lt;/h2&gt;&lt;h3 id=&quot;MainActivity&quot;&gt;&lt;a href=&quot;#MainActivity&quot; class=&quot;headerlink&quot; title=&quot;MainActivity&quot;&gt;&lt;/a&gt;MainActivity&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class MainActivity extends Activity implements OnClickListener,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		OnItemClickListener &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private static final String TAG = MainActivity.class.getSimpleName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private ImageView &lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private Button plugin;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; pluginList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	protected void onCreate(Bundle savedInstanceState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		super.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;ContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		initView();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;initView&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt; = (ImageView) findViewById(R.id.img_&lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		plugin = (Button) findViewById(R.id.btn_plugin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		plugin.setOnClickListener(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void onClick(View v) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		View contentView = getLayoutInflater().inflate(R.layout.popupwindow,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PopupWindow popupWindow = new PopupWindow(contentView,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				ViewGroup.LayoutParams.WRAP_CONTENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				ViewGroup.LayoutParams.WRAP_CONTENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		popupWindow.setBackgroundDrawable(getResources().getDrawable(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				R.drawable.ic_launcher));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 设置该属性后。我们点击提示框意外部分，提示框会消失&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		popupWindow.setFocusable(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		popupWindow.setTouchable(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 查找插件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pluginList = findPluginList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pluginList == null || pluginList.size() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Toast.makeText(this, &lt;span class=&quot;string&quot;&gt;&quot;目前没有皮肤，请下载&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 显示皮肤&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ListView lv_plugins = (ListView) contentView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.findViewById(R.id.lv_plugins);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		lv_plugins.setOnItemClickListener(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SimpleAdapter simpleAdapter = new SimpleAdapter(this, pluginList,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				android.R.layout.simple_list_item_1, new String[] &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;label&quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				new int[] &amp;#123; android.R.id.text1 &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		lv_plugins.setAdapter(simpleAdapter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 设置popiuWindow的宽高&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		popupWindow.setWidth(&lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		popupWindow.setHeight(pluginList.size() * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 显示popupWindow（显示提示框）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		popupWindow.showAsDropDown(v);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;findPluginList&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; list = new ArrayList&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 获取包管理器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PackageManager packageManager = this.getPackageManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 获取手机已安装的App包信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;PackageInfo&amp;gt; installedPackages = packageManager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.getInstalledPackages(PackageManager.GET_ACTIVITIES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 获取当前app的包信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			PackageInfo currentPackageInfo = this.getPackageManager()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.getPackageInfo(getPackageName(), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (PackageInfo packageInfo : installedPackages) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				String packageName = packageInfo.packageName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				String sharedUsId = packageInfo.sharedUserId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sharedUsId == null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						|| !sharedUsId.equals(currentPackageInfo.sharedUserId)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						|| packageName.equals(getPackageName())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;built_in&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// 记载插件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Map&amp;lt;String, String&amp;gt; pluginMap = new HashMap&amp;lt;String, String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// 获取插件程序的名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				String label = packageInfo.applicationInfo.loadLabel(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						packageManager).toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// 获取包名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				pluginMap.put(&lt;span class=&quot;string&quot;&gt;&quot;packageName&quot;&lt;/span&gt;, packageName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				pluginMap.put(&lt;span class=&quot;string&quot;&gt;&quot;label&quot;&lt;/span&gt;, label);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				list.add(pluginMap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; catch (NameNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// TODO Auto-generated catch block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; list;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void onItemClick(AdapterView&amp;lt;?&amp;gt; parent, View view, int position,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			long id) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 加载插件资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;、获取插件上下文（其实就是获取插件程序的资源加载器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// h获取当前要加载的插件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Map&amp;lt;String, String&amp;gt; map = pluginList.get(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 获取插件上下文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Context pluginContext = findPluginContext(map);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;、根据插件资源加载器，加载图片资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		int resId = findResourceId(pluginContext, map);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (resId != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 直接设置是不能加载到资源(解决办法：我们必须通过插件加载器来帮助我们加载资源)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			bg.setImageDrawable(pluginContext.getResources().getDrawable(resId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 获取插件上下文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @param map&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private Context findPluginContext(Map&amp;lt;String, String&amp;gt; map) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Log.i(TAG, map.get(&lt;span class=&quot;string&quot;&gt;&quot;packageName&quot;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&quot;-------------------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; this.createPackageContext(map.get(&lt;span class=&quot;string&quot;&gt;&quot;packageName&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					Context.CONTEXT_IGNORE_SECURITY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; catch (NameNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// TODO Auto-generated catch block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 根据插件资源加载器，加载图片资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 查找资源id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 反射&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @param pluginContext 插件上下文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @param map 插件包名的Map&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private int findResourceId(Context pluginContext, Map&amp;lt;String, String&amp;gt; map) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String packageName = map.get(&lt;span class=&quot;string&quot;&gt;&quot;packageName&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 把ClassLoader包装一下，包装为插件的类加载器(Class.forName里面默认的classLoader是本类的类加载器)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PathClassLoader classLoader = new PathClassLoader(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				pluginContext.getPackageResourcePath(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				PathClassLoader.getSystemClassLoader());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Class&amp;lt;?&amp;gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;Name = Class.forName(packageName + &lt;span class=&quot;string&quot;&gt;&quot;.R&lt;span class=&quot;variable&quot;&gt;$drawable&lt;/span&gt;&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					classLoader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Field[] fields = &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;Name.getFields();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Field field : fields) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// 找到想要的图片(我们所有插件的背景图片的名称：icon_main_&lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;---图片协议：main_&lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				String name = field.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equals(&lt;span class=&quot;string&quot;&gt;&quot;icon_main_bg&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; field.getInt(R.drawable.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; catch (ClassNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; catch (IllegalAccessException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// TODO Auto-generated catch block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; catch (IllegalArgumentException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// TODO Auto-generated catch block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;MainActivity的布局文件&quot;&gt;&lt;a href=&quot;#MainActivity的布局文件&quot; class=&quot;headerlink&quot; title=&quot;MainActivity的布局文件&quot;&gt;&lt;/a&gt;MainActivity的布局文件&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;RelativeLayout xmlns:android=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xmlns:tools=&lt;span class=&quot;string&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_width=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_height=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tools:context=&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;relativePackage&amp;#125;&lt;/span&gt;.&lt;span class=&quot;variable&quot;&gt;$&amp;#123;activityClass&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;ImageView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&lt;span class=&quot;string&quot;&gt;&quot;@+id/img_bg&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&lt;span class=&quot;string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:scaleType=&lt;span class=&quot;string&quot;&gt;&quot;centerCrop&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:src=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/ic_launcher&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:contentDescription=&lt;span class=&quot;string&quot;&gt;&quot;@null&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Button&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&lt;span class=&quot;string&quot;&gt;&quot;@+id/btn_plugin&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:text=&lt;span class=&quot;string&quot;&gt;&quot;切换&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;插件程序&quot;&gt;&lt;a href=&quot;#插件程序&quot; class=&quot;headerlink&quot; title=&quot;插件程序&quot;&gt;&lt;/a&gt;插件程序&lt;/h2&gt;&lt;p&gt;插件程序没有程序入口，所以manifest中application节点不定义入口activity，并且与主程序有相同的&lt;code&gt;android:sharedUserId=&amp;quot;com.example.plugin.background&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;近期在整理插件化方面的知识，今天以换皮肤效果的例子总结如下：&lt;/p&gt;
&lt;h2 id=&quot;插件开发好处&quot;&gt;&lt;a href=&quot;#插件开发好处&quot; class=&quot;headerlink&quot; title=&quot;插件开发好处&quot;&gt;&lt;/a&gt;插件开发好处&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;有助于协同开发，有助于功能扩展等等…&lt;/li&gt;
&lt;li&gt;如支付宝主界面都是模块分类，每一个入口就是插件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;成为插件的要求&quot;&gt;&lt;a href=&quot;#成为插件的要求&quot; class=&quot;headerlink&quot; title=&quot;成为插件的要求&quot;&gt;&lt;/a&gt;成为插件的要求&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;插件程序是不需要程序主入口的&lt;/li&gt;
&lt;li&gt;插件程序必须要遵循主程序的协议才能成为插件&lt;/li&gt;
&lt;li&gt;插件开发不管插件是图片还是功能，它们都是通过类反射来找到插件资源&lt;/li&gt;
&lt;li&gt;在manifest中具有相同的&lt;code&gt;android:sharedUserId&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Android" scheme="http://xiaoqianchang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://xiaoqianchang.github.io/tags/Android/"/>
    
      <category term="插件化" scheme="http://xiaoqianchang.github.io/tags/%E6%8F%92%E4%BB%B6%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Java弹药库</title>
    <link href="http://xiaoqianchang.github.io/2016/03/15/java-hnowledge-home1/"/>
    <id>http://xiaoqianchang.github.io/2016/03/15/java-hnowledge-home1/</id>
    <published>2016-03-15T09:17:51.000Z</published>
    <updated>2016-03-28T09:01:38.023Z</updated>
    
    <content type="html">&lt;p&gt;继上一篇Android弹药库后对Java中的知识积累在此，这里会持续更新。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;好，开工啦！&lt;/p&gt;
&lt;h2 id=&quot;获取系统环境变量的值&quot;&gt;&lt;a href=&quot;#获取系统环境变量的值&quot; class=&quot;headerlink&quot; title=&quot;获取系统环境变量的值&quot;&gt;&lt;/a&gt;获取系统环境变量的值&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java.lang.System.getenv(String)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Collections工具类用法&quot;&gt;&lt;a href=&quot;#Collections工具类用法&quot; class=&quot;headerlink&quot; title=&quot;Collections工具类用法&quot;&gt;&lt;/a&gt;Collections工具类用法&lt;/h2&gt;&lt;h3 id=&quot;互换在指定列表中指定位置的元素&quot;&gt;&lt;a href=&quot;#互换在指定列表中指定位置的元素&quot; class=&quot;headerlink&quot; title=&quot;互换在指定列表中指定位置的元素&quot;&gt;&lt;/a&gt;互换在指定列表中指定位置的元素&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Collections.swap(list, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;); // 互换在list中&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;位置的元素&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;对已有的List集合数据排序&quot;&gt;&lt;a href=&quot;#对已有的List集合数据排序&quot; class=&quot;headerlink&quot; title=&quot;对已有的List集合数据排序&quot;&gt;&lt;/a&gt;对已有的List集合数据排序&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;比较的是字符串类型&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Collections.sort(contactList, new Comparator&amp;lt;User&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public int compare(User lhs, User rhs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; lhs.getUsername().compareTo(rhs.getUsername());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;比较的是int&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Collections.sort(conversationList, new Comparator&amp;lt;Integer&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public int compare(final Integer con1, final Integer con2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (con1 == con2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (con2 &amp;gt; con1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&lt;h3 id=&quot;以下符号的含义&quot;&gt;&lt;a href=&quot;#以下符号的含义&quot; class=&quot;headerlink&quot; title=&quot;以下符号的含义&quot;&gt;&lt;/a&gt;以下符号的含义&lt;/h3&gt;&lt;p&gt;&lt;code&gt;^&lt;/code&gt;：开始符号&lt;br&gt;&lt;code&gt;$&lt;/code&gt;：结尾符号&lt;/p&gt;
&lt;p&gt;&lt;code&gt;?&lt;/code&gt;：出现0到1次&lt;br&gt;&lt;code&gt;+&lt;/code&gt;：出现1哒n次&lt;br&gt;&lt;code&gt;*&lt;/code&gt;：出现0到n次&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.&lt;/code&gt;：任意字符&lt;br&gt;&lt;code&gt;\w&lt;/code&gt;：包括字母、数字和下划线及“&lt;em&gt;”，等价于[a-zA-Z0-9&lt;/em&gt;]&lt;br&gt;&lt;code&gt;\W&lt;/code&gt;：\w取反&lt;br&gt;&lt;code&gt;\d&lt;/code&gt;：包括数字，等价于[0-9]&lt;br&gt;&lt;code&gt;\D&lt;/code&gt;：\d的取反&lt;br&gt;&lt;code&gt;{n}&lt;/code&gt;：出现n次&lt;/p&gt;
&lt;p&gt;例子：&lt;br&gt;&lt;code&gt;^[a-zA-Z0-9_$]{6,20}$&lt;/code&gt;：表示有字母、数字、下划线6到20位组成&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;继上一篇Android弹药库后对Java中的知识积累在此，这里会持续更新。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://xiaoqianchang.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://xiaoqianchang.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Android弹药库</title>
    <link href="http://xiaoqianchang.github.io/2016/03/10/android-knowledge-home1/"/>
    <id>http://xiaoqianchang.github.io/2016/03/10/android-knowledge-home1/</id>
    <published>2016-03-10T03:04:35.000Z</published>
    <updated>2016-04-02T11:12:28.299Z</updated>
    
    <content type="html">&lt;p&gt;在工作中突然发现以前多么熟悉的知识技能现在不能愉快的玩耍了，想要再次使用以前的一些知识还得Google，这是一件多么伤心的事啊。这些天比较闲，打算把最近用到的小知识总结下，这里会持续更新。还是应了那句话，“知识在于积累”。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;好，开工啦！&lt;/p&gt;
&lt;h2 id=&quot;设备信息的获取&quot;&gt;&lt;a href=&quot;#设备信息的获取&quot; class=&quot;headerlink&quot; title=&quot;设备信息的获取&quot;&gt;&lt;/a&gt;设备信息的获取&lt;/h2&gt;&lt;p&gt;下面以Samsung SM-N9006（Android 4.4.2 API19）为例&lt;/p&gt;
&lt;h3 id=&quot;手机的型号&quot;&gt;&lt;a href=&quot;#手机的型号&quot; class=&quot;headerlink&quot; title=&quot;手机的型号&quot;&gt;&lt;/a&gt;手机的型号&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 手机的型号 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getMobileType&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; android.os.Build.MODEL; // SM-N9006&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;手机的OS版本号&quot;&gt;&lt;a href=&quot;#手机的OS版本号&quot; class=&quot;headerlink&quot; title=&quot;手机的OS版本号&quot;&gt;&lt;/a&gt;手机的OS版本号&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 手机的OS版本号 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getSdkVersion&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; android.os.Build.VERSION.RELEASE; // 指的是版本，例如&lt;span class=&quot;number&quot;&gt;4.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// android.os.Build.VERSION.SDK; // 指的是level，例如 &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// android.os.Build.VERSION.SDK_INT; // 指的是level，例如 &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;设备的DeviceId&quot;&gt;&lt;a href=&quot;#设备的DeviceId&quot; class=&quot;headerlink&quot; title=&quot;设备的DeviceId&quot;&gt;&lt;/a&gt;设备的DeviceId&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; 设备的DeviceId,如果获取不到，就将该手机的Wifi Mac地址作为唯一识别码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getDeviceId&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String deviceId = tm.getDeviceId();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (deviceId == null || deviceId.trim().length() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		WifiManager wifi = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		WifiInfo info = wifi.getConnectionInfo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		deviceId = info.getMacAddress();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; deviceId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;APP信息的获取&quot;&gt;&lt;a href=&quot;#APP信息的获取&quot; class=&quot;headerlink&quot; title=&quot;APP信息的获取&quot;&gt;&lt;/a&gt;APP信息的获取&lt;/h2&gt;&lt;h3 id=&quot;获取PackageInfo&quot;&gt;&lt;a href=&quot;#获取PackageInfo&quot; class=&quot;headerlink&quot; title=&quot;获取PackageInfo&quot;&gt;&lt;/a&gt;获取PackageInfo&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static PackageInfo &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getPackageInfo&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PackageInfo pi = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			pi = context.getPackageManager()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.getPackageInfo(context.getPackageName(), PackageManager.GET_CONFIGURATIONS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; catch (NameNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; pi;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取版本号&quot;&gt;&lt;a href=&quot;#获取版本号&quot; class=&quot;headerlink&quot; title=&quot;获取版本号&quot;&gt;&lt;/a&gt;获取版本号&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 手机版本号 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getSoftVersion&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; getPackageInfo().versionCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取版本信息&quot;&gt;&lt;a href=&quot;#获取版本信息&quot; class=&quot;headerlink&quot; title=&quot;获取版本信息&quot;&gt;&lt;/a&gt;获取版本信息&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 手机的版本名 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getVersionName&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; getPackageInfo().versionName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;检查apk文件是否为一个完整的apk文件&quot;&gt;&lt;a href=&quot;#检查apk文件是否为一个完整的apk文件&quot; class=&quot;headerlink&quot; title=&quot;检查apk文件是否为一个完整的apk文件&quot;&gt;&lt;/a&gt;检查apk文件是否为一个完整的apk文件&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 检查下载完成的apk文件，是否为一个完整的apk文件 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static boolean checkApkFile(String apkFilePath) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boolean result = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PackageManager pManager = FrameworkController.getInstance().getPackageManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		PackageInfo pInfo = pManager.getPackageArchiveInfo(apkFilePath, PackageManager.GET_ACTIVITIES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pInfo == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			result = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			result = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		result = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;存储操作&quot;&gt;&lt;a href=&quot;#存储操作&quot; class=&quot;headerlink&quot; title=&quot;存储操作&quot;&gt;&lt;/a&gt;存储操作&lt;/h2&gt;&lt;h3 id=&quot;外置存储-sdcard&quot;&gt;&lt;a href=&quot;#外置存储-sdcard&quot; class=&quot;headerlink&quot; title=&quot;外置存储(sdcard)&quot;&gt;&lt;/a&gt;外置存储(sdcard)&lt;/h3&gt;&lt;h4 id=&quot;检查sdcard是否存在&quot;&gt;&lt;a href=&quot;#检查sdcard是否存在&quot; class=&quot;headerlink&quot; title=&quot;检查sdcard是否存在&quot;&gt;&lt;/a&gt;检查sdcard是否存在&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 检查sdcard是否存在(安装好) */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static boolean &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;isSdcardExist&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (android.os.Environment.getExternalStorageState().equals(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			android.os.Environment.MEDIA_MOUNTED))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以这样配置路径&lt;br&gt;&lt;code&gt;Environment.getExternalStorageDirectory().getAbsolutePath()+ File.separator+&amp;quot;MobileOffice&amp;quot;+File.separator+&amp;quot;upgrade&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;得到外置存储的root的绝对路径&quot;&gt;&lt;a href=&quot;#得到外置存储的root的绝对路径&quot; class=&quot;headerlink&quot; title=&quot;得到外置存储的root的绝对路径&quot;&gt;&lt;/a&gt;得到外置存储的root的绝对路径&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 得到外置存储的root的绝对路径，一般为 /storage/emulated/&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;  */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getStorageRootDir&lt;/span&gt;&lt;/span&gt;() &amp;#123; // /mnt/sdcard&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; Environment.getExternalStorageDirectory().getAbsolutePath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;创建sdcard的文件夹&quot;&gt;&lt;a href=&quot;#创建sdcard的文件夹&quot; class=&quot;headerlink&quot; title=&quot;创建sdcard的文件夹&quot;&gt;&lt;/a&gt;创建sdcard的文件夹&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// dir 要创建sdcard的文件夹的绝对路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public  static boolean createDir(String dir) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	File file = new File(dir);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!file.exists())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; file.mkdirs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;内部存储&quot;&gt;&lt;a href=&quot;#内部存储&quot; class=&quot;headerlink&quot; title=&quot;内部存储&quot;&gt;&lt;/a&gt;内部存储&lt;/h3&gt;&lt;p&gt;得到cashe路径&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String cachePath = context.getCacheDir().getAbsolutePath();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;MD5加密&quot;&gt;&lt;a href=&quot;#MD5加密&quot; class=&quot;headerlink&quot; title=&quot;MD5加密&quot;&gt;&lt;/a&gt;MD5加密&lt;/h2&gt;&lt;h3 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public final static String MD5(String s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	char hexDigits[] = &amp;#123; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;5&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;6&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;7&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;8&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;d&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;e&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;f&#39;&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		byte[] btInput = s.getBytes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 获得MD5摘要算法的 MessageDigest 对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		MessageDigest mdInst = MessageDigest.getInstance(&lt;span class=&quot;string&quot;&gt;&quot;MD5&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 使用指定的字节更新摘要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mdInst.update(btInput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 获得密文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		byte[] md = mdInst.digest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 把密文转换成十六进制的字符串形式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		int j = md.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		char str[] = new char[j * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		int k = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; j; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			byte byte0 = md[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			str[k++] = hexDigits[byte0 &amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;amp; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;xf];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			str[k++] = hexDigits[byte0 &amp;amp; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;xf];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; new String(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;方法二&quot;&gt;&lt;a href=&quot;#方法二&quot; class=&quot;headerlink&quot; title=&quot;方法二&quot;&gt;&lt;/a&gt;方法二&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 对原始字符串进行md5的&lt;span class=&quot;built_in&quot;&gt;hash&lt;/span&gt;计算 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private static String md5(String string) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	byte[] &lt;span class=&quot;built_in&quot;&gt;hash&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;hash&lt;/span&gt; = MessageDigest.getInstance(&lt;span class=&quot;string&quot;&gt;&quot;MD5&quot;&lt;/span&gt;).digest(string.getBytes(&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (NoSuchAlgorithmException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		throw new RuntimeException(&lt;span class=&quot;string&quot;&gt;&quot;Huh, MD5 should be supported?&quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (UnsupportedEncodingException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		throw new RuntimeException(&lt;span class=&quot;string&quot;&gt;&quot;Huh, UTF-8 should be supported?&quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	StringBuilder hex = new StringBuilder(hash.length * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (byte b : &lt;span class=&quot;built_in&quot;&gt;hash&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((b &amp;amp; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;xFF) &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;x10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			hex.append(&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		hex.append(Integer.toHexString(b &amp;amp; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;xFF));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; hex.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;方法三&quot;&gt;&lt;a href=&quot;#方法三&quot; class=&quot;headerlink&quot; title=&quot;方法三&quot;&gt;&lt;/a&gt;方法三&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public String Md5(String plainText) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String result = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		MessageDigest md = MessageDigest.getInstance(&lt;span class=&quot;string&quot;&gt;&quot;MD5&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		md.update(plainText.getBytes());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		byte b[] = md.digest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		int i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		StringBuffer buf = new StringBuffer(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (int offset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; offset &amp;lt; b.length; offset++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			i = b[offset];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				i += &lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				buf.append(&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			buf.append(Integer.toHexString(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		result = buf.toString().toUpperCase();// &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;位的加密（转成大写）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		buf.toString().substring(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;);// &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;位的加密&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (NoSuchAlgorithmException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;判断给定字符串是否空白串&quot;&gt;&lt;a href=&quot;#判断给定字符串是否空白串&quot; class=&quot;headerlink&quot; title=&quot;判断给定字符串是否空白串&quot;&gt;&lt;/a&gt;判断给定字符串是否空白串&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 判断给定字符串是否空白串。&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 空白串是指由空格、制表符、回车符、换行符组成的字符串&amp;lt;br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * StringUtils.isBlank(null) = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; StringUtils.isBlank(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;) = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; StringUtils.isBlank(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;) = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; boolean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static boolean isBlank(CharSequence cs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int strLen;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cs == null || (strLen = cs.length()) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; strLen; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!Character.isWhitespace(cs.charAt(i))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;对指定字符串隐藏&quot;&gt;&lt;a href=&quot;#对指定字符串隐藏&quot; class=&quot;headerlink&quot; title=&quot;对指定字符串隐藏&quot;&gt;&lt;/a&gt;对指定字符串隐藏&lt;/h2&gt;&lt;h3 id=&quot;对字符串中间部分隐藏&quot;&gt;&lt;a href=&quot;#对字符串中间部分隐藏&quot; class=&quot;headerlink&quot; title=&quot;对字符串中间部分隐藏&quot;&gt;&lt;/a&gt;对字符串中间部分隐藏&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 对身份证号和就诊卡号进行部分隐藏 &amp;lt;/br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;pre&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * StringUtils.hidePartString(&lt;span class=&quot;string&quot;&gt;&quot;abcdefghi&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; , &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) = abc**fghi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;/pre&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String hideMiddleString(String str, int prefixCount, int suffixCount) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (null == str || &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(str)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int length = str.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (length &amp;lt;= (prefixCount + suffixCount))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int count = length - prefixCount - suffixCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String temp1 = str.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, prefixCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String temp2 = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, temp3 = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		temp2 += &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	temp3 = str.substring(length - suffixCount, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; temp1 + temp2 + temp3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;对字符串两边部分隐藏&quot;&gt;&lt;a href=&quot;#对字符串两边部分隐藏&quot; class=&quot;headerlink&quot; title=&quot;对字符串两边部分隐藏&quot;&gt;&lt;/a&gt;对字符串两边部分隐藏&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 对身份证号和就诊卡号进行部分隐藏 &amp;lt;/br&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;pre&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * StringUtils.hidePartString(&lt;span class=&quot;string&quot;&gt;&quot;abcdefghi&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; , &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) = ***de****&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;/pre&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String hidePartString2(String str, int prefixCount, int suffixCount) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (null == str || &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(str)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	int length = str.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (length &amp;lt;= (prefixCount + suffixCount))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String temp1 = str.substring(prefixCount, length - suffixCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String temp2 = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, temp3 = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; prefixCount; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		temp2 += &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; suffixCount; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		temp3 += &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; temp2 + temp1 + temp3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;对-properties文件的加载解析&quot;&gt;&lt;a href=&quot;#对-properties文件的加载解析&quot; class=&quot;headerlink&quot; title=&quot;对.properties文件的加载解析&quot;&gt;&lt;/a&gt;对.properties文件的加载解析&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// msgId 为键值对的key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String getMessage(String msgId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String resourcePath = &lt;span class=&quot;string&quot;&gt;&quot;/assets/FailureMessage.properties&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Properties pro = new Properties();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pro.load(CommonUtils.class.getResourceAsStream(resourcePath));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; pro.getProperty(msgId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;得到所有进程Task最上面的Activity&quot;&gt;&lt;a href=&quot;#得到所有进程Task最上面的Activity&quot; class=&quot;headerlink&quot; title=&quot;得到所有进程Task最上面的Activity&quot;&gt;&lt;/a&gt;得到所有进程Task最上面的Activity&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static String getTopActivity(Context context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	List&amp;lt;RunningTaskInfo&amp;gt; runningTaskInfos = manager.getRunningTasks(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (runningTaskInfos != null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; runningTaskInfos.get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).topActivity.getClassName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取Html相关内容&quot;&gt;&lt;a href=&quot;#获取Html相关内容&quot; class=&quot;headerlink&quot; title=&quot;获取Html相关内容&quot;&gt;&lt;/a&gt;获取Html相关内容&lt;/h2&gt;&lt;h3 id=&quot;获取Html的title&quot;&gt;&lt;a href=&quot;#获取Html的title&quot; class=&quot;headerlink&quot; title=&quot;获取Html的title&quot;&gt;&lt;/a&gt;获取Html的title&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 通过正则表达式提取&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static final String REG_TITLE       = &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;title&amp;gt;(.+)&amp;lt;/title&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String getTitle(String html) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String str = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Matcher matcher = Pattern.compile(REG_TITLE).matcher(html);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (matcher.find()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        str = matcher.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取Html的所欲IMG&quot;&gt;&lt;a href=&quot;#获取Html的所欲IMG&quot; class=&quot;headerlink&quot; title=&quot;获取Html的所欲IMG&quot;&gt;&lt;/a&gt;获取Html的所欲IMG&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static final String REG_IMG         = &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;img.+src=\&quot;(.+)\&quot;.+&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String[] getImgUrl(String html) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String[] str = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Matcher matcher = Pattern.compile(REG_IMG).matcher(html);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (matcher.find()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        str = new String[matcher.groupCount()];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (int i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt;= matcher.groupCount(); i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            str[i - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = matcher.group(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取Html的所欲meta&quot;&gt;&lt;a href=&quot;#获取Html的所欲meta&quot; class=&quot;headerlink&quot; title=&quot;获取Html的所欲meta&quot;&gt;&lt;/a&gt;获取Html的所欲meta&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static final String REG_DESCRIPTION = &lt;span class=&quot;string&quot;&gt;&quot;.*&amp;lt;meta name=\&quot;description\&quot; content=\&quot;([^&amp;gt;]+)\&quot;&amp;gt;.*&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String getDescription(String html) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String str = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Matcher matcher = Pattern.compile(REG_DESCRIPTION).matcher(html);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (matcher.find()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        str = matcher.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;图片处理框架用法&quot;&gt;&lt;a href=&quot;#图片处理框架用法&quot; class=&quot;headerlink&quot; title=&quot;图片处理框架用法&quot;&gt;&lt;/a&gt;图片处理框架用法&lt;/h2&gt;&lt;h3 id=&quot;ImageLoader-一&quot;&gt;&lt;a href=&quot;#ImageLoader-一&quot; class=&quot;headerlink&quot; title=&quot;ImageLoader(一)&quot;&gt;&lt;/a&gt;ImageLoader(一)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageLoader.getInstance().displayImage(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		imgUrl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		imageView,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		new DisplayImageOptions.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.showImageForEmptyUri(R.drawable.pic_loading_empty)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.showImageOnFail(R.drawable.pic_loading_error)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// .displayer(new RoundedBitmapDisplayer(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// .considerExifParams(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.cacheInMemory(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;).build());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先定义DisplayImageOptions&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static DisplayImageOptions options = new DisplayImageOptions.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	.showImageForEmptyUri(R.drawable.default_patient)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	.showImageOnFail(R.drawable.default_patient)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	// .displayer(new RoundedBitmapDisplayer(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// .considerExifParams(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	.cacheInMemory(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	.build();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在使用的地方加载并显示&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageLoader.getInstance().displayImage(imgUrl, imageView, options);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;ImageLoader-二&quot;&gt;&lt;a href=&quot;#ImageLoader-二&quot; class=&quot;headerlink&quot; title=&quot;ImageLoader(二)&quot;&gt;&lt;/a&gt;ImageLoader(二)&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;先定义&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 第一次显示监听器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static class AnimateFirstDisplayListener extends SimpleImageLoadingListener &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 装imgUrl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public static final List&amp;lt;String&amp;gt; displayedImages = Collections.synchronizedList(new LinkedList&amp;lt;String&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loadedImage != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ImageView imageView = (ImageView) view;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			boolean firstDisplay = !displayedImages.contains(imageUri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (firstDisplay) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				FadeInBitmapDisplayer.animate(imageView, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				displayedImages.add(imageUri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;在使用的地方加载并显示&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageLoader.getInstance().displayImage(imgUrl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		imageView, options,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    		new AnimateFirstDisplayListener());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;下载网络图片&quot;&gt;&lt;a href=&quot;#下载网络图片&quot; class=&quot;headerlink&quot; title=&quot;下载网络图片&quot;&gt;&lt;/a&gt;下载网络图片&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 图片Url保存为位图并进行缩放操作，通过传入图片url获取位图方法 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static Bitmap getNetImage(Context context, String url) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Bitmap mBitmap = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	URL myFileUrl = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		myFileUrl = new URL(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (MalformedURLException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (myFileUrl != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			HttpURLConnection conn = (HttpURLConnection) myFileUrl.openConnection();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			conn.setDoInput(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			conn.connect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			InputStream is = conn.getInputStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mBitmap = BitmapFactory.decodeStream(is);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			is.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mBitmap != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//			DisplayMetrics metrics = new DisplayMetrics();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//			metrics = context.getResources().getDisplayMetrics();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//			int screenWidth = metrics.widthPixels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//			int screenHeight = metrics.heightPixels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		int bitmapWidth = mBitmap.getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		int bitmapHeight = mBitmap.getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//			&lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; scale = ((&lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;) screenWidth) / bitmapWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Matrix matrix = new Matrix();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//			matrix.postScale(scale, scale);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mBitmap = Bitmap.createBitmap(mBitmap, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, bitmapWidth, bitmapHeight, matrix, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; mBitmap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;手机号码限制&quot;&gt;&lt;a href=&quot;#手机号码限制&quot; class=&quot;headerlink&quot; title=&quot;手机号码限制&quot;&gt;&lt;/a&gt;手机号码限制&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 判别手机是否为正确手机号码； 号码段分配如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 移动：&lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;135&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;138&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;139&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;151&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;157&lt;/span&gt;(TD)、&lt;span class=&quot;number&quot;&gt;158&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;159&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;187&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 联通：&lt;span class=&quot;number&quot;&gt;130&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;132&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;152&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;155&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;156&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;185&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;186&lt;/span&gt; 电信：&lt;span class=&quot;number&quot;&gt;133&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;153&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;、&lt;span class=&quot;number&quot;&gt;189&lt;/span&gt;、（&lt;span class=&quot;number&quot;&gt;1349&lt;/span&gt;卫通）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static boolean isMobileNum(String mobiles) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Pattern p1 = Pattern.compile(&lt;span class=&quot;string&quot;&gt;&quot;(\\+[0-9]+[\\- \\.]*)?&quot;&lt;/span&gt; // +&amp;lt;digits&amp;gt;&amp;lt;sdd&amp;gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			+ &lt;span class=&quot;string&quot;&gt;&quot;(\\([0-9]+\\)[\\- \\.]*)?&quot;&lt;/span&gt; // (&amp;lt;digits&amp;gt;)&amp;lt;sdd&amp;gt;*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			+ &lt;span class=&quot;string&quot;&gt;&quot;([0-9][0-9\\- \\.][0-9\\- \\.]+[0-9])&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Pattern p = Pattern.compile(&lt;span class=&quot;string&quot;&gt;&quot;^((13[0-9])|(15[^4,//D])|(18[0,5-9]))//d&amp;#123;8&amp;#125;$&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Matcher m = p1.matcher(mobiles);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; m.matches();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static boolean isMobileNum2(String num) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String str = &lt;span class=&quot;string&quot;&gt;&quot;^((13[0-9])|(15[0-9])|(18[0-9])|(145)|(147))\\d&amp;#123;8&amp;#125;$&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Pattern p = Pattern.compile(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Matcher m = p.matcher(num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; m.matches();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;蓝牙Bluetooth&quot;&gt;&lt;a href=&quot;#蓝牙Bluetooth&quot; class=&quot;headerlink&quot; title=&quot;蓝牙Bluetooth&quot;&gt;&lt;/a&gt;蓝牙Bluetooth&lt;/h2&gt;&lt;p&gt;Android 中打开 Bluetooth：有以下三种方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;强制打开&lt;/li&gt;
&lt;li&gt;调用系统弹出框提示用户打开&lt;/li&gt;
&lt;li&gt;跳转到系统设置中让用户自己打开&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;获取BluetoothAdapter&quot;&gt;&lt;a href=&quot;#获取BluetoothAdapter&quot; class=&quot;headerlink&quot; title=&quot;获取BluetoothAdapter&quot;&gt;&lt;/a&gt;获取BluetoothAdapter&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static BluetoothAdapter &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getBluetoothAdapter&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; BluetoothAdapter.getDefaultAdapter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;当前-Android-设备是否支持-Bluetooth&quot;&gt;&lt;a href=&quot;#当前-Android-设备是否支持-Bluetooth&quot; class=&quot;headerlink&quot; title=&quot;当前 Android 设备是否支持 Bluetooth&quot;&gt;&lt;/a&gt;当前 Android 设备是否支持 Bluetooth&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;：支持 Bluetooth &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;：不支持 Bluetooth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static boolean &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;isBluetoothSupported&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; BluetoothAdapter.getDefaultAdapter() != null ? &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;当前-Android-设备的-bluetooth-是否已经开启&quot;&gt;&lt;a href=&quot;#当前-Android-设备的-bluetooth-是否已经开启&quot; class=&quot;headerlink&quot; title=&quot;当前 Android 设备的 bluetooth 是否已经开启&quot;&gt;&lt;/a&gt;当前 Android 设备的 bluetooth 是否已经开启&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/** 没有直接的用户的允许绝不要开启 Bluetooth。如果你想要打开 Bluetooth 创建一个无线连接，你应当使用 ACTION_REQUEST_ENABLE Intent，这样会弹出一个提示框提示用户是否开启 Bluetooth，&lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;() 方法仅提供给有 UI 、更改系统设置的应用来使用，例如“电源管理”应用。 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static boolean &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;isBluetoothEnabled&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bluetoothAdapter != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; bluetoothAdapter.isEnabled();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;强制打开&quot;&gt;&lt;a href=&quot;#强制打开&quot; class=&quot;headerlink&quot; title=&quot;强制打开&quot;&gt;&lt;/a&gt;强制打开&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 强制开启当前 Android 设备的 Bluetooth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static boolean &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;turnOnBluetooth&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bluetoothAdapter != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; bluetoothAdapter.enable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;调用系统弹出框提示用户打开&quot;&gt;&lt;a href=&quot;#调用系统弹出框提示用户打开&quot; class=&quot;headerlink&quot; title=&quot;调用系统弹出框提示用户打开&quot;&gt;&lt;/a&gt;调用系统弹出框提示用户打开&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 弹出系统弹框提示用户打开 Bluetooth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static void openBluetooth(Activity activity) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 请求打开 Bluetooth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Intent &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;BtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;BtIntent.setAction(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;BtIntent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, BLUETOOTH_DISCOVERABLE_DURATION);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 设置 Bluetooth 设备可以被其它 Bluetooth 设备扫描到&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 打开本机的蓝牙发现功能（默认打开&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;秒，可以将时间最多延长至&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;秒）  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Intent discoveryIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 设置 Bluetooth 设备可见时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // discoveryIntent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;);//设置持续时间（最多&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;秒）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activity.startActivityForResult(&lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;BtIntent, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;强制关闭&quot;&gt;&lt;a href=&quot;#强制关闭&quot; class=&quot;headerlink&quot; title=&quot;强制关闭&quot;&gt;&lt;/a&gt;强制关闭&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BluetoothAdapter.getDefaultAdapter().disable();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;蓝牙是否打开&quot;&gt;&lt;a href=&quot;#蓝牙是否打开&quot; class=&quot;headerlink&quot; title=&quot;蓝牙是否打开&quot;&gt;&lt;/a&gt;蓝牙是否打开&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BluetoothAdapter.getDefaultAdapter().isEnabled();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取以配对的蓝牙设备&quot;&gt;&lt;a href=&quot;#获取以配对的蓝牙设备&quot; class=&quot;headerlink&quot; title=&quot;获取以配对的蓝牙设备&quot;&gt;&lt;/a&gt;获取以配对的蓝牙设备&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 首次连接某蓝牙设备需要先配对，一旦配对成功，该设备的信息会被保存，以后连接时无需再配对，但是已配对的设备不一定是能连接的。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Set&amp;lt;BluetoothDevice&amp;gt; devices = BluetoothAdapter.getDefaultAdapter().getBondedDevices();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;蓝牙广播接收器&quot;&gt;&lt;a href=&quot;#蓝牙广播接收器&quot; class=&quot;headerlink&quot; title=&quot;蓝牙广播接收器&quot;&gt;&lt;/a&gt;蓝牙广播接收器&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public BroadcastReceiver receiver = new &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;BroadcastReceiver&lt;/span&gt;&lt;/span&gt;() &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void onReceive(Context context, Intent intent) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	String action = intent.getAction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.i(&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;---:---&quot;&lt;/span&gt; + action);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(BluetoothDevice.ACTION_FOUND.equals(action)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.i(&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, device.getName() + &lt;span class=&quot;string&quot;&gt;&quot;ACTION_FOUND&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Toast.makeText(context, device.getName() + &lt;span class=&quot;string&quot;&gt;&quot; 发现设备&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (BluetoothDevice.ACTION_ACL_CONNECTED.equals(action)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.i(&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, device.getName() + &lt;span class=&quot;string&quot;&gt;&quot;ACTION_ACL_CONNECTED&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Toast.makeText(context, device.getName() + &lt;span class=&quot;string&quot;&gt;&quot;该设备已连接&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            intent.putExtra(&lt;span class=&quot;string&quot;&gt;&quot;Bluetooth&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;btMessage&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            intent.setClass(context, OrderDetailsActivity.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context.startActivity(intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (BluetoothDevice.ACTION_ACL_DISCONNECT_REQUESTED.equals(action)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.i(&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, device.getName() + &lt;span class=&quot;string&quot;&gt;&quot;ACTION_ACL_DISCONNECT_REQUESTED&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Toast.makeText(context, device.getName() + &lt;span class=&quot;string&quot;&gt;&quot;该设备断开连接2&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (BluetoothDevice.ACTION_ACL_DISCONNECTED.equals(action)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.i(&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, device.getName() + &lt;span class=&quot;string&quot;&gt;&quot;ACTION_ACL_DISCONNECTED&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Toast.makeText(context, device.getName() + &lt;span class=&quot;string&quot;&gt;&quot;该设备断开连接1&quot;&lt;/span&gt;, Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (BluetoothAdapter.ACTION_STATE_CHANGED.equals(action)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (getBluetoothAdapter().getState() == BluetoothAdapter.STATE_ON) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        		Log.i(&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;蓝牙打开&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (getBluetoothAdapter().getState() == BluetoothAdapter.STATE_OFF) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	Log.i(&lt;span class=&quot;string&quot;&gt;&quot;XC&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;蓝牙关闭&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 注册蓝牙监听广播&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void initIntentFilter(Context context) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 设置广播信息过滤    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IntentFilter intentFilter = new IntentFilter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    intentFilter.addAction(BluetoothDevice.ACTION_FOUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    intentFilter.addAction(BluetoothDevice.ACTION_ACL_CONNECTED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    intentFilter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECT_REQUESTED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    intentFilter.addAction(BluetoothDevice.ACTION_ACL_DISCONNECTED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    intentFilter.addAction(BluetoothAdapter.ACTION_STATE_CHANGED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 注册广播接收器，接收并处理搜索结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context.registerReceiver(receiver, intentFilter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 取消注册蓝牙监听广播&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void unregisterReceiver(Context context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	context.unregisterReceiver(receiver);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;音视频&quot;&gt;&lt;a href=&quot;#音视频&quot; class=&quot;headerlink&quot; title=&quot;音视频&quot;&gt;&lt;/a&gt;音视频&lt;/h2&gt;&lt;h3 id=&quot;声音处理&quot;&gt;&lt;a href=&quot;#声音处理&quot; class=&quot;headerlink&quot; title=&quot;声音处理&quot;&gt;&lt;/a&gt;声音处理&lt;/h3&gt;&lt;h4 id=&quot;播放系统-ogg文件&quot;&gt;&lt;a href=&quot;#播放系统-ogg文件&quot; class=&quot;headerlink&quot; title=&quot;播放系统.ogg文件&quot;&gt;&lt;/a&gt;播放系统.ogg文件&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 需要注意的是，如果MediaPlayer实例是由create方法创建的，那么第一次启动播放前不需要再调用prepare（）了，因为create方法里已经调用过了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void playOgg(Context context, int resid) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 按键声音播放设置及初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boolean mDTMFToneEnabled = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;         // 系统参数“按键操作音”标志位&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 获取系统参数“按键操作音”是否开启(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:开,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:关)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mDTMFToneEnabled = Settings.System.getInt(context.getContentResolver(), Settings.System.DTMF_TONE_WHEN_DIALING, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;系统按键操作音是否开启&quot;&lt;/span&gt; + mDTMFToneEnabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		synchronized (mToneGeneratorLock) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mDTMFToneEnabled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// “按键操作音”是否开启的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 Log.d(TAG, e.getMessage());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 mDTMFToneEnabled = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mediaPlayer == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer = MediaPlayer.create(context, resid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;mediaPlayer=&quot;&lt;/span&gt; + mediaPlayer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 播放&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	play();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 播放&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;play&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	try &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer.setVolume(BEEP_VOLUME, BEEP_VOLUME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer.setOnPreparedListener(preparedListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer.setOnErrorListener(errorListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 当MediaPlayer调用seek()方法时触发该监听器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//			mediaPlayer.setOnSeekCompleteListener(seekCompleteListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// Media Player的播放完成事件绑定事件监听器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// When the beep has finished playing, rewind to queue up another one.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer.setOnCompletionListener(conpletionListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; catch (Exception  e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 监听资源是否准备好&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OnPreparedListener preparedListener = new &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;OnPreparedListener&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void onPrepared(MediaPlayer mp) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;onPrepared---&amp;gt;start()&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 启动文件播放的方法，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 定位方法，可以让播放器从指定的位置开始播放,注意的是该方法是个异步方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//			mp.seekTo(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 监听播放是否seekTo()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OnSeekCompleteListener seekCompleteListener = new &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;OnSeekCompleteListener&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void onSeekComplete(MediaPlayer mp) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;onSeekComplete&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 监听播放是否完成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OnCompletionListener conpletionListener = new &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;OnCompletionListener&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void onCompletion(MediaPlayer mp) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;onCompletion&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer.release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 监听播放是否异常&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OnErrorListener errorListener = new &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;OnErrorListener&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public boolean onError(MediaPlayer mp, int what, int extra) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Log.i(TAG, &lt;span class=&quot;string&quot;&gt;&quot;onError&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer.release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mediaPlayer = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;密码格式是否正确&quot;&gt;&lt;a href=&quot;#密码格式是否正确&quot; class=&quot;headerlink&quot; title=&quot;密码格式是否正确&quot;&gt;&lt;/a&gt;密码格式是否正确&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;8到10位并且包含字母和数字&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;boolean isTrue = Pattern.compile(&lt;span class=&quot;string&quot;&gt;&quot;^(?=.*[0-9])(?=.*[a-zA-Z]).&amp;#123;8,10&amp;#125;$&quot;&lt;/span&gt;).matcher(pass).matches();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;8到10位数字&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;boolean isTrue = Pattern.compile(&lt;span class=&quot;string&quot;&gt;&quot;^(?=.*[0-9]).&amp;#123;8,10&amp;#125;$&quot;&lt;/span&gt;).matcher(pass).matches();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;小数处理&quot;&gt;&lt;a href=&quot;#小数处理&quot; class=&quot;headerlink&quot; title=&quot;小数处理&quot;&gt;&lt;/a&gt;小数处理&lt;/h2&gt;&lt;h3 id=&quot;计算百分比&quot;&gt;&lt;a href=&quot;#计算百分比&quot; class=&quot;headerlink&quot; title=&quot;计算百分比&quot;&gt;&lt;/a&gt;计算百分比&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 计算百分比&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param num 当前数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param total 总和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param scale 精确几位小数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String percent(double num, double total, int scale) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DecimalFormat df = (DecimalFormat) NumberFormat.getInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 可以设置精确几位小数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    df.setMaximumFractionDigits(scale);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 模式 例如四舍五入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    df.setRoundingMode(RoundingMode.HALF_UP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    double accuracy_num = num / total * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; df.format(accuracy_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;按pattern格式化小数&quot;&gt;&lt;a href=&quot;#按pattern格式化小数&quot; class=&quot;headerlink&quot; title=&quot;按pattern格式化小数&quot;&gt;&lt;/a&gt;按pattern格式化小数&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 按pattern格式化小数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param value 小数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param pattern 格式化类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static String formatDecimal(double value, String pattern) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DecimalFormat df = (DecimalFormat) NumberFormat.getInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 数值类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	df.applyPattern(pattern);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 模式 例如四舍五入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	df.setRoundingMode(RoundingMode.HALF_UP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; df.format(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 通过下面调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;formatDecimal(value, &lt;span class=&quot;string&quot;&gt;&quot;0.00&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;程序是否在前台运行&quot;&gt;&lt;a href=&quot;#程序是否在前台运行&quot; class=&quot;headerlink&quot; title=&quot;程序是否在前台运行&quot;&gt;&lt;/a&gt;程序是否在前台运行&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public boolean isAppOnForeground(Context context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Returns a list of application processes that are running on the device&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ActivityManager activityManager = (ActivityManager) context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			.getApplicationContext().getSystemService(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					Context.ACTIVITY_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String packageName = context.getApplicationContext().getPackageName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	List&amp;lt;RunningAppProcessInfo&amp;gt; appProcesses = activityManager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			.getRunningAppProcesses();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (appProcesses == null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (RunningAppProcessInfo appProcess : appProcesses) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// The name of the process that this object is associated with.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (appProcess.processName.equals(packageName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;amp;&amp;amp; appProcess.importance == RunningAppProcessInfo.IMPORTANCE_FOREGROUND) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;关闭软键盘&quot;&gt;&lt;a href=&quot;#关闭软键盘&quot; class=&quot;headerlink&quot; title=&quot;关闭软键盘&quot;&gt;&lt;/a&gt;关闭软键盘&lt;/h2&gt;&lt;h3 id=&quot;软键盘-一&quot;&gt;&lt;a href=&quot;#软键盘-一&quot; class=&quot;headerlink&quot; title=&quot;软键盘(一)&quot;&gt;&lt;/a&gt;软键盘(一)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 切换输入法的显示和隐藏状态，这里做了判断，所以默认情况下只能够隐藏键盘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 这个是让输入法状态发生逆转，如果当前未显示则显示出来。如果显示出来，则隐藏。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;hideSoftKeyboard&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	InputMethodManager mInputMethodManager = (InputMethodManager) FrameworkController.getInstance()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			.getSystemService(Context.INPUT_METHOD_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInputMethodManager.isActive()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mInputMethodManager.toggleSoftInput(InputMethodManager.SHOW_IMPLICIT, InputMethodManager.HIDE_NOT_ALWAYS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;软键盘-二&quot;&gt;&lt;a href=&quot;#软键盘-二&quot; class=&quot;headerlink&quot; title=&quot;软键盘(二)&quot;&gt;&lt;/a&gt;软键盘(二)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 隐藏android键盘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * imm.hideSoftInputFromInputMethod(getActivity().getCurrentFocus().getWindowToken(), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 这个经本人在android4.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;机子上测试无效。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param view   为EditText（passwdEdit）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@Deprecated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static void hideSoftKeyboard2(View view) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	InputMethodManager mInputMethodManager = (InputMethodManager) FrameworkController.getInstance()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			.getSystemService(Context.INPUT_METHOD_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (null != view) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mInputMethodManager.hideSoftInputFromInputMethod(view.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;软键盘-三&quot;&gt;&lt;a href=&quot;#软键盘-三&quot; class=&quot;headerlink&quot; title=&quot;软键盘(三)&quot;&gt;&lt;/a&gt;软键盘(三)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 影藏软键盘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * mInputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 经过测试，这是唯一有效的方法！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param view   编辑的EditText&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static void hideSoftKeyboard3(View view) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	InputMethodManager mInputMethodManager = (InputMethodManager) FrameworkController.getInstance()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			.getSystemService(Context.INPUT_METHOD_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (null != view) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mInputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;改变透明度&quot;&gt;&lt;a href=&quot;#改变透明度&quot; class=&quot;headerlink&quot; title=&quot;改变透明度&quot;&gt;&lt;/a&gt;改变透明度&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 设置添加屏幕的背景透明度 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param activity 当前Activity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param &lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;Alpha 透明度值&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static void backgroundAlpha(Activity activity, &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;Alpha) &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WindowManager.LayoutParams lp = activity.getWindow().getAttributes();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lp.alpha = &lt;span class=&quot;built_in&quot;&gt;bg&lt;/span&gt;Alpha; //&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activity.getWindow().setAttributes(lp);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取每个应用程序最高可用内存&quot;&gt;&lt;a href=&quot;#获取每个应用程序最高可用内存&quot; class=&quot;headerlink&quot; title=&quot;获取每个应用程序最高可用内存&quot;&gt;&lt;/a&gt;获取每个应用程序最高可用内存&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 可以通过以下代码获取当前应用程序最高可用内存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int maxMemory = (int) (Runtime.getRuntime().maxMemory() / &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Log.d(&lt;span class=&quot;string&quot;&gt;&quot;TAG&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Max memory is &quot;&lt;/span&gt; + maxMemory + &lt;span class=&quot;string&quot;&gt;&quot;kb&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在工作中突然发现以前多么熟悉的知识技能现在不能愉快的玩耍了，想要再次使用以前的一些知识还得Google，这是一件多么伤心的事啊。这些天比较闲，打算把最近用到的小知识总结下，这里会持续更新。还是应了那句话，“知识在于积累”。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://xiaoqianchang.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="http://xiaoqianchang.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Java enum的使用</title>
    <link href="http://xiaoqianchang.github.io/2016/03/09/java-enum/"/>
    <id>http://xiaoqianchang.github.io/2016/03/09/java-enum/</id>
    <published>2016-03-09T05:03:46.000Z</published>
    <updated>2016-03-28T09:01:32.438Z</updated>
    
    <content type="html">&lt;p&gt;之前学Java很少用到枚举，但是会经常看到别人代码中有枚举，然后进行学习。现在想再复习下枚举，今天简单总结下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Java的Enum枚举类型是在JDK1.5引入的，在 Java 中它虽然算个“小”功能，却给我的开发带来了“大”方便。&lt;/p&gt;
&lt;h2 id=&quot;简单学习&quot;&gt;&lt;a href=&quot;#简单学习&quot; class=&quot;headerlink&quot; title=&quot;简单学习&quot;&gt;&lt;/a&gt;简单学习&lt;/h2&gt;&lt;h3 id=&quot;知识的了解&quot;&gt;&lt;a href=&quot;#知识的了解&quot; class=&quot;headerlink&quot; title=&quot;知识的了解&quot;&gt;&lt;/a&gt;知识的了解&lt;/h3&gt;&lt;p&gt;定义枚举类型其实就是在定义一个类，只不过很多细节由编译器帮你补齐了，所以，某种程度上enum关键词的作用就像是class或interface.&lt;/p&gt;
&lt;p&gt;当使用enum定义枚举类型时，实际上所定义出来的类型是继承自java.lang.Enum类。而每个被枚举的成员其实就是定义的枚举类型的一个实例，它们都被默认为public、static和final，这与接口中的常量限制相同，可以通过类名称直接使用它们。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum Light &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 利用构造函数传参&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RED(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), GREEN(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), YELLOW(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 定义私有变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private int nCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 构造函数，枚举类型只能为私有&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private Light(int _nCode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		this.nCode = _nCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; String.valueOf(this.nCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如上面的例子所定义的枚举类型Light,RED,GREEN,YELLOW都是Light的一个对象实例。因为是对象，所以，对象上自然有一些方法可以调用。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;values()方法可以让您取得所有的枚举成员实例，并以数组方式返回。您可以使用这两个方法来简单的将Color的枚举成员显示出来。&lt;/li&gt;
&lt;li&gt;静态valueOf()方法可以让您将指定的字符串尝试转换为枚举类型。&lt;/li&gt;
&lt;li&gt;可以用compareTo()方法来比较两个枚举对象在枚举时的顺序。-1之前，0位置相同，1之后。&lt;/li&gt;
&lt;li&gt;对于每个枚举成员，使用ordinal()方法，依枚举顺序得到位置索引，默认以0开始。&lt;/li&gt;
&lt;li&gt;从Object继承的toString()方法被重新定义了，可以让你直接取得枚举值的字符串描述；&lt;br&gt;如果重写toStirng方法，&lt;br&gt;&lt;code&gt;for (Light aLight : Light.values()) {}&lt;/code&gt;遍历后aLight值为&lt;code&gt;1、3、2&lt;/code&gt;，aLight.name()为RED, GREEN, YELLOW，aLight.ordinal()为0、1、2&lt;br&gt;否则aLight的值为&lt;code&gt;RED, GREEN, YELLOW&lt;/code&gt;，aLight.name()为RED, GREEN, YELLOW，aLight.ordinal()为0、1、2&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;七种常见用法&quot;&gt;&lt;a href=&quot;#七种常见用法&quot; class=&quot;headerlink&quot; title=&quot;七种常见用法&quot;&gt;&lt;/a&gt;七种常见用法&lt;/h2&gt;&lt;h3 id=&quot;用法一：常量&quot;&gt;&lt;a href=&quot;#用法一：常量&quot; class=&quot;headerlink&quot; title=&quot;用法一：常量&quot;&gt;&lt;/a&gt;用法一：常量&lt;/h3&gt;&lt;p&gt;在JDK1.5 之前，我们定义常量都是： public static fianl…. 。现在好了，有了枚举，可以把相关的常量分组到一个枚举类型里，而且枚举提供了比常量更多的方法。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum Color &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RED, GREEN, BLANK, YELLOW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;用法二：switch&quot;&gt;&lt;a href=&quot;#用法二：switch&quot; class=&quot;headerlink&quot; title=&quot;用法二：switch&quot;&gt;&lt;/a&gt;用法二：switch&lt;/h3&gt;&lt;p&gt;JDK1.6之前的switch语句只支持int,char,enum类型，使用枚举，能让我们的代码可读性更强。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;enum Signal &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GREEN, YELLOW, RED&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class TrafficLight &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Signal color = Signal.RED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;change&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch (color) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; RED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color = Signal.GREEN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; YELLOW:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color = Signal.RED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; GREEN:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color = Signal.YELLOW;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;用法三：向枚举中添加新方法&quot;&gt;&lt;a href=&quot;#用法三：向枚举中添加新方法&quot; class=&quot;headerlink&quot; title=&quot;用法三：向枚举中添加新方法&quot;&gt;&lt;/a&gt;用法三：向枚举中添加新方法&lt;/h3&gt;&lt;p&gt;如果打算自定义自己的方法，那么必须在enum实例序列的最后添加一个分号。而且 Java 要求必须先定义 enum实例。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum Color &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RED(&lt;span class=&quot;string&quot;&gt;&quot;红色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), GREEN(&lt;span class=&quot;string&quot;&gt;&quot;绿色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;), BLANK(&lt;span class=&quot;string&quot;&gt;&quot;白色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), YELLO(&lt;span class=&quot;string&quot;&gt;&quot;黄色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 成员变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 构造方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Color(String name, int index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.index = index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 普通方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static String getName(int index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Color c : Color.values()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c.getIndex() == index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; c.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // get &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; 方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Name(String name) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public int &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getIndex&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Index(int index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.index = index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;用法四：覆盖枚举的方法&quot;&gt;&lt;a href=&quot;#用法四：覆盖枚举的方法&quot; class=&quot;headerlink&quot; title=&quot;用法四：覆盖枚举的方法&quot;&gt;&lt;/a&gt;用法四：覆盖枚举的方法&lt;/h3&gt;&lt;p&gt;下面给出一个toString()方法覆盖的例子。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum Color &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RED(&lt;span class=&quot;string&quot;&gt;&quot;红色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), GREEN(&lt;span class=&quot;string&quot;&gt;&quot;绿色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;), BLANK(&lt;span class=&quot;string&quot;&gt;&quot;白色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), YELLO(&lt;span class=&quot;string&quot;&gt;&quot;黄色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 成员变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 构造方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Color(String name, int index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.index = index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //覆盖方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; this.index+&lt;span class=&quot;string&quot;&gt;&quot;_&quot;&lt;/span&gt;+this.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;用法五：实现接口&quot;&gt;&lt;a href=&quot;#用法五：实现接口&quot; class=&quot;headerlink&quot; title=&quot;用法五：实现接口&quot;&gt;&lt;/a&gt;用法五：实现接口&lt;/h3&gt;&lt;p&gt;所有的枚举都继承自java.lang.Enum类。由于Java 不支持多继承，所以枚举对象不能再继承其他类。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public interface Behaviour &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String getInfo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public enum Color implements Behaviour&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RED(&lt;span class=&quot;string&quot;&gt;&quot;红色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), GREEN(&lt;span class=&quot;string&quot;&gt;&quot;绿色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;), BLANK(&lt;span class=&quot;string&quot;&gt;&quot;白色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), YELLO(&lt;span class=&quot;string&quot;&gt;&quot;黄色&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 成员变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 构造方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Color(String name, int index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.index = index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //接口方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getInfo&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; this.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //接口方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;print&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(this.index+&lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt;+this.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;用法六：使用接口组织枚举&quot;&gt;&lt;a href=&quot;#用法六：使用接口组织枚举&quot; class=&quot;headerlink&quot; title=&quot;用法六：使用接口组织枚举&quot;&gt;&lt;/a&gt;用法六：使用接口组织枚举&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public interface Food &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    enum Coffee implements Food&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BLACK_COFFEE,DECAF_COFFEE,LATTE,CAPPUCCINO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    enum Dessert implements Food&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FRUIT, CAKE, GELATO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;用法七：关于枚举集合的使用&quot;&gt;&lt;a href=&quot;#用法七：关于枚举集合的使用&quot; class=&quot;headerlink&quot; title=&quot;用法七：关于枚举集合的使用&quot;&gt;&lt;/a&gt;用法七：关于枚举集合的使用&lt;/h3&gt;&lt;p&gt;java.util.EnumSet和java.util.EnumMap是两个枚举集合。EnumSet保证集合中的元素不重复；EnumMap中的key是enum类型，而value则可以是任意类型。关于这个两个集合的使用就不在这里赘述，可以查看最上面的例子以及参考JDK文档。&lt;/p&gt;
&lt;h2 id=&quot;枚举和常量定义的区别&quot;&gt;&lt;a href=&quot;#枚举和常量定义的区别&quot; class=&quot;headerlink&quot; title=&quot;枚举和常量定义的区别&quot;&gt;&lt;/a&gt;枚举和常量定义的区别&lt;/h2&gt;&lt;h3 id=&quot;一、-通常定义常量方法&quot;&gt;&lt;a href=&quot;#一、-通常定义常量方法&quot; class=&quot;headerlink&quot; title=&quot;一、 通常定义常量方法&quot;&gt;&lt;/a&gt;一、 通常定义常量方法&lt;/h3&gt;&lt;p&gt;我们通常利用public final static方法定义的代码如下，分别用1表示红灯，3表示绿灯，2表示黄灯。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class Light &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* 红灯 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public final static int RED = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* 绿灯 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public final static int GREEN = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* 黄灯 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public final static int YELLOW = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;二、-枚举类型定义常量方法&quot;&gt;&lt;a href=&quot;#二、-枚举类型定义常量方法&quot; class=&quot;headerlink&quot; title=&quot;二、 枚举类型定义常量方法&quot;&gt;&lt;/a&gt;二、 枚举类型定义常量方法&lt;/h3&gt;&lt;p&gt;枚举类型的简单定义方法如下，我们似乎没办法定义每个枚举类型的值。比如我们定义红灯、绿灯和黄灯的代码可能如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum Light &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RED, GREEN, YELLOW;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们只能够表示出红灯、绿灯和黄灯，但是具体的值我们没办法表示出来。别急，既然枚举类型提供了构造函数，我们可以通过构造函数和覆写toString方法来实现。首先给Light枚举类型增加构造方法，然后每个枚举类型的值通过构造函数传入对应的参数，同时覆写toString方法，在该方法中返回从构造函数中传入的参数，改造后的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum Light &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 利用构造函数传参&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RED(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), GREEN(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), YELLOW(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 定义私有变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int nCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 构造函数，枚举类型只能为私有&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Light(int _nCode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.nCode = _nCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; String.valueOf(this.nCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;三、-完整示例代码&quot;&gt;&lt;a href=&quot;#三、-完整示例代码&quot; class=&quot;headerlink&quot; title=&quot;三、 完整示例代码&quot;&gt;&lt;/a&gt;三、 完整示例代码&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;枚举类型的完整演示代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import java.util.EnumMap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import java.util.EnumSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class LightTest &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.定义枚举类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public enum Light &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 利用构造函数传参&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		RED(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), GREEN(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;), YELLOW(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 定义私有变量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		private int nCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 构造函数，枚举类型只能为私有&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		private Light(int _nCode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			this.nCode = _nCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public String &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; String.valueOf(this.nCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @param args&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public static void main(String[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.遍历枚举类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;演示枚举类型的遍历 ......&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;TraversalEnum();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.演示EnumMap对象的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;演示EnmuMap对象的使用和遍历.....&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;EnumMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;.演示EnmuSet的使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;演示EnmuSet对象的使用和遍历.....&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;EnumSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 演示枚举类型的遍历&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private static void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;testTraversalEnum&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Light[] allLight = Light.values();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Light aLight : allLight) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;当前灯name：&quot;&lt;/span&gt; + aLight.name());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;当前灯ordinal：&quot;&lt;/span&gt; + aLight.ordinal());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;当前灯：&quot;&lt;/span&gt; + aLight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 演示EnumMap的使用，EnumMap跟HashMap的使用差不多，只不过key要是枚举类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private static void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;testEnumMap&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.演示定义EnumMap对象，EnumMap对象的构造函数需要参数传入,默认是key的类的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		EnumMap&amp;lt;Light, String&amp;gt; currEnumMap = new EnumMap&amp;lt;Light, String&amp;gt;(Light.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		currEnumMap.put(Light.RED, &lt;span class=&quot;string&quot;&gt;&quot;红灯&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		currEnumMap.put(Light.GREEN, &lt;span class=&quot;string&quot;&gt;&quot;绿灯&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		currEnumMap.put(Light.YELLOW, &lt;span class=&quot;string&quot;&gt;&quot;黄灯&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.遍历对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Light aLight : Light.values()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;[key=&quot;&lt;/span&gt; + aLight.name() + &lt;span class=&quot;string&quot;&gt;&quot;,value=&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			+ currEnumMap.get(aLight) + &lt;span class=&quot;string&quot;&gt;&quot;]&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 演示EnumSet如何使用，EnumSet是一个抽象类，获取一个类型的枚举类型内容&amp;lt;BR/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 可以使用allOf方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private static void &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;testEnumSet&lt;/span&gt;&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		EnumSet&amp;lt;Light&amp;gt; currEnumSet = EnumSet.allOf(Light.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Light aLightSetElement : currEnumSet) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;当前EnumSet中数据为：&quot;&lt;/span&gt; + aLightSetElement);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;执行结果如下：&lt;/strong&gt;&lt;br&gt;演示枚举类型的遍历 ……&lt;br&gt;当前灯name：RED&lt;br&gt;当前灯ordinal：0&lt;br&gt;当前灯：1&lt;br&gt;当前灯name：GREEN&lt;br&gt;当前灯ordinal：1&lt;br&gt;当前灯：3&lt;br&gt;当前灯name：YELLOW&lt;br&gt;当前灯ordinal：2&lt;br&gt;当前灯：2&lt;br&gt;演示EnmuMap对象的使用和遍历…..&lt;br&gt;[key=RED,value=红灯]&lt;br&gt;[key=GREEN,value=绿灯]&lt;br&gt;[key=YELLOW,value=黄灯]&lt;br&gt;演示EnmuSet对象的使用和遍历…..&lt;br&gt;当前EnumSet中数据为：1&lt;br&gt;当前EnumSet中数据为：3&lt;br&gt;当前EnumSet中数据为：2&lt;/p&gt;
&lt;h3 id=&quot;四、-正常定义常量方法和枚举定义常量方法的区别&quot;&gt;&lt;a href=&quot;#四、-正常定义常量方法和枚举定义常量方法的区别&quot; class=&quot;headerlink&quot; title=&quot;四、 正常定义常量方法和枚举定义常量方法的区别&quot;&gt;&lt;/a&gt;四、 正常定义常量方法和枚举定义常量方法的区别&lt;/h3&gt;&lt;p&gt;以下内容可能有些无聊，但绝对值得一窥&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class State &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static final int ON = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static final Int OFF= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有什么不好了，大家都这样用了很长时间了，没什么问题啊。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先它不是类型安全的。你必须确保是int；其次，你还要确保它的范围是0和1；最后，很多时候你打印出来的时候，你只看到1和0，但其没有看到代码的人并不知道你的企图。&lt;/li&gt;
&lt;li&gt;可以创建一个enum类，把它看做一个普通的类。除了它不能继承其他类了。(java是单继承，它已经继承了Enum)，可以添加其他方法，覆盖它本身的方法。&lt;/li&gt;
&lt;li&gt;JDK1.7后switch()参数可以使用enum了。&lt;/li&gt;
&lt;li&gt;values()方法是编译器插入到enum定义中的static方法，所以，当你将enum实例向上转型为父类Enum是，values()就不可访问了。解决办法：在Class中有一个getEnumConstants()方法，所以即便Enum接口中没有values()方法，我们仍然可以通过Class对象取得所有的enum实例。&lt;/li&gt;
&lt;li&gt;无法从enum继承子类，如果需要扩展enum中的元素，可以在一个接口的内部，创建实现该接口的枚举，达到将枚举元素进行分组。&lt;/li&gt;
&lt;li&gt;使用EnumSet代替标志。enum要求其成员都是唯一的，但是enum中不能删除添加元素。&lt;/li&gt;
&lt;li&gt;EnumMap的key是enum，value是任何其他Object对象。&lt;/li&gt;
&lt;li&gt;enum允许程序员为eunm实例编写方法。所以可以为每个enum实例赋予各自不同的行为。&lt;/li&gt;
&lt;li&gt;使用enum的职责链(Chain of Responsibility) .这个关系到设计模式的职责链模式。以多种不同的方法来解决一个问题。然后将他们链接在一起。当一个请求到来时，遍历这个链，直到链中的某个解决方案能够处理该请求。&lt;/li&gt;
&lt;li&gt;使用enum的状态机。&lt;/li&gt;
&lt;li&gt;使用enum多路分发。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://xyiyy.iteye.com/blog/359663/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java枚举类型的使用&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前学Java很少用到枚举，但是会经常看到别人代码中有枚举，然后进行学习。现在想再复习下枚举，今天简单总结下。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://xiaoqianchang.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="http://xiaoqianchang.github.io/tags/Java/"/>
    
      <category term="enum" scheme="http://xiaoqianchang.github.io/tags/enum/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio删除工程</title>
    <link href="http://xiaoqianchang.github.io/2016/03/08/Android-Studio-delete-project/"/>
    <id>http://xiaoqianchang.github.io/2016/03/08/Android-Studio-delete-project/</id>
    <published>2016-03-08T02:52:13.000Z</published>
    <updated>2016-03-28T09:00:50.876Z</updated>
    
    <content type="html">&lt;p&gt;本人之前一直在用eclipse开发，在业余时间用Android Studio玩了下，发现了许多不一样，然后自己琢磨琢磨发现了一些小东西，现在慢慢总结之删除Project。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;再一次练习中我想删除工程，发现找来找去就是不知道怎么删除Android studio里的工程项目。右键菜单啊，主菜单啊，什么都找不到名叫Delete或者叫Remove的菜单项。直接按Delete键又不能删除掉整个工程项目。天坑啊！eclipse直接按Delete键就可以删除的，这让我怎么玩啊。&lt;/p&gt;
&lt;p&gt;于是去网上找了下，很多文章都在说，Android studio里是叫Remove，所以我就到处找。我用Ctrl + Shift + a查找菜单项，查找出来的Remove菜单项也无法删除工程啊。&lt;/p&gt;
&lt;p&gt;纠结了很久，最终是阴差阳错之下，才搞定了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先删除工程的Module。在Menubar中File–&amp;gt;Project Structure–&amp;gt;Module–&amp;gt;左上角红色的减号删除&lt;/li&gt;
&lt;li&gt;再选择单个Module右键点击Delete&lt;/li&gt;
&lt;li&gt;再删除Project。&lt;br&gt;第一张图没有Delete菜单项，第二章图才有。&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/as-delete1.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/as-delete2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;而且到最后发现Delete根本不能删除最顶层的更目录，只是变成空文件夹而已。。。。。。。已晕&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本人之前一直在用eclipse开发，在业余时间用Android Studio玩了下，发现了许多不一样，然后自己琢磨琢磨发现了一些小东西，现在慢慢总结之删除Project。&lt;/p&gt;
    
    </summary>
    
      <category term="Android Studio" scheme="http://xiaoqianchang.github.io/categories/Android-Studio/"/>
    
    
      <category term="Android Studio" scheme="http://xiaoqianchang.github.io/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://xiaoqianchang.github.io/2016/03/02/git-common-command/"/>
    <id>http://xiaoqianchang.github.io/2016/03/02/git-common-command/</id>
    <published>2016-03-02T06:53:20.000Z</published>
    <updated>2016-04-12T03:25:08.208Z</updated>
    
    <content type="html">&lt;h2 id=&quot;在Git下创建一个空分支&quot;&gt;&lt;a href=&quot;#在Git下创建一个空分支&quot; class=&quot;headerlink&quot; title=&quot;在Git下创建一个空分支&quot;&gt;&lt;/a&gt;在Git下创建一个空分支&lt;/h2&gt;&lt;h3 id=&quot;怎样安全的进行这项操作？&quot;&gt;&lt;a href=&quot;#怎样安全的进行这项操作？&quot; class=&quot;headerlink&quot; title=&quot;怎样安全的进行这项操作？&quot;&gt;&lt;/a&gt;怎样安全的进行这项操作？&lt;/h3&gt;&lt;p&gt;我们需要建立一个孤立的分支，为了尽可能的保证数据安全，最好重新clone一份代码。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git clone https://github.com/user/repo.git // Clone our repo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好了，代码clone好了。&lt;/p&gt;
&lt;h3 id=&quot;开工&quot;&gt;&lt;a href=&quot;#开工&quot; class=&quot;headerlink&quot; title=&quot;开工&quot;&gt;&lt;/a&gt;开工&lt;/h3&gt;&lt;p&gt;这里以github的操作为例，下面试图创建一个名为gh-pages的空分支&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$cd repo

$ git checkout --orphan gh-pages
# 创建一个orphan的分支，这个分支是独立的
Switched to a new branch &amp;apos;gh-pages&amp;apos;

git rm -rf .
# 删除原来代码树下的所有文件，包括.gitignore
rm &amp;apos;.gitignore&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意这个时候你用git    branch命令是看不见当前分支的名字的，除非你进行了第一次commit。&lt;br&gt;下面我们开始添加一些代码文件，例如这里新增了一个index.html&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ echo \&quot;My GitHub Page\&quot; &amp;gt; index.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git commit -a -m \&quot;First pages commit\&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git push origin gh-pages&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在commit操作之后，你就可以用git branch命令看到新分支的名字了，然后push到远程仓库。&lt;/p&gt;
&lt;p&gt;如果觉得这些命令记不到，推荐使用工具Git Extensions，在工具栏Commands–&amp;gt;Create branch…&lt;/p&gt;
&lt;h2 id=&quot;Git创建与合并分支&quot;&gt;&lt;a href=&quot;#Git创建与合并分支&quot; class=&quot;headerlink&quot; title=&quot;Git创建与合并分支&quot;&gt;&lt;/a&gt;Git创建与合并分支&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;主干（master）作为所有开发人员的主干，也是所有项目的根（root），例如，目前“医路通”项目的整个进展应该都是在master中，包含一期、二期和三期的开发。&lt;br&gt;    分支（branch），依托于主干（master）延伸出来的版本需求，都可以创建分支。例如，医路通临时版本的发布，需要将部分功能屏蔽，这个时候就建议从主干中拉出来一个分支，在分支上修改，并最终发出版本，而不是直接拿主干来修改。&lt;br&gt;    标签（tag），tag的作用更多是作为备份和里程碑使用，如果我们发一个版本，一般都需要打一个tag的。&lt;br&gt;    软件开发过程中，同一个项目，常常会延伸不同的其他项目分支；又或者仅仅是为了发布而需要屏蔽某些功能的时候，我们就需要使用不同的分支来进行开发了。Git下如何快速建立分支呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Git分支的创建&quot;&gt;&lt;a href=&quot;#Git分支的创建&quot; class=&quot;headerlink&quot; title=&quot;Git分支的创建&quot;&gt;&lt;/a&gt;Git分支的创建&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;查看分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;创建分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;切换分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;创建+切换分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;创建分支后同步到服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Git分支的合并与提交&quot;&gt;&lt;a href=&quot;#Git分支的合并与提交&quot; class=&quot;headerlink&quot; title=&quot;Git分支的合并与提交&quot;&gt;&lt;/a&gt;Git分支的合并与提交&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;合并某分支到当前分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git merge name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如，如果要从其他分支合并到master的分支中，则需要先切换到mastert分支，然后再进行merge。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git merger name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;幸运的话，即可看到合并成功的提示。如果有所冲突，那么可能会提示你修改代码，这个时候不要慌张，根据提示，进入代码中，删除代码中“head &lt;em&gt;*&lt;/em&gt; ”之类的提示，保存后，重新运行merge命令，直到完成为止！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将git分支push到服务器即可&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;删除分支&quot;&gt;&lt;a href=&quot;#删除分支&quot; class=&quot;headerlink&quot; title=&quot;删除分支&quot;&gt;&lt;/a&gt;删除分支&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;删除分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;操作示例：&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/e062651b-2333-46d5-ab87-b31296b1017c.jpg&quot; alt=&quot;Git&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;本地分支与远程分支&quot;&gt;&lt;a href=&quot;#本地分支与远程分支&quot; class=&quot;headerlink&quot; title=&quot;本地分支与远程分支&quot;&gt;&lt;/a&gt;本地分支与远程分支&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;远程分支就是本地分支push到服务器上的时候产生的。如master就是一个最典型的远程分支（默认）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;随便创建分支，然后push到服务器就生成的远程分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b dev // 创建本地dev分支用于开发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b bug // 创建本地bug分支用于bug处理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout -b feature // 创建本地feature分支用于新功能开发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin dev // 生成远程dev分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin bug&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push originfeature&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;远程分支与本地分支的区分。在服务器上拉去特定分支时要指定本地分支名称&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout --track origin/dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意该命令带有–track参数，所以要求git1.6.4以上！这样git会自动切换到develop分支&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同步本地远程分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git fetch origin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Git的tag操作&quot;&gt;&lt;a href=&quot;#Git的tag操作&quot; class=&quot;headerlink&quot; title=&quot;Git的tag操作&quot;&gt;&lt;/a&gt;Git的tag操作&lt;/h2&gt;&lt;p&gt;标签（tag），tag的作用更多是作为备份和里程碑使用，如果我们发一个版本，一般都需要打一个tag的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看已有标签&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git tag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;特定的搜索模式列出符合条件的标签&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git tag &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;v1.4.2.*&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;查看指定tag&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git show tag_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;创建简单标签&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git tag tag_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;创建带注释的标签&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git tag &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; v1.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&#39;1.0milestone&#39;&lt;/span&gt; // -m 后面是注释&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;推送[分享]标签，tag需要单独push&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin -tags // 这样其他人也能看到标签了&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Git的reset操作&quot;&gt;&lt;a href=&quot;#Git的reset操作&quot; class=&quot;headerlink&quot; title=&quot;Git的reset操作&quot;&gt;&lt;/a&gt;Git的reset操作&lt;/h2&gt;&lt;p&gt;实际开发过程中，经常会遇到一些莫名其妙的问题，例如，明明跟服务器代码同步的，但是却提示有代码需要提交。诸如此类问题，就可以使用reset操作了。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;git回到上一版本命令：&lt;br&gt;&lt;code&gt;git reset&lt;/code&gt;是指将当前head的内容重置，不会留log信息&lt;br&gt;&lt;code&gt;git reset HEAD filename&lt;/code&gt;  从暂存区中移除文件&lt;br&gt;&lt;code&gt;git reset --hard HEAD~3&lt;/code&gt;  会将最新的3次提交全部重置，就像没有提交过一样&lt;/p&gt;
&lt;p&gt;根据&lt;code&gt;--soft&lt;/code&gt; &lt;code&gt;--mixed&lt;/code&gt; &lt;code&gt;--hard&lt;/code&gt;，会对working tree和index和HEAD进行重置：&lt;br&gt;&lt;code&gt;git reset --mixed&lt;/code&gt;：此为默认方式，不带任何参数的git reset，即时这种方式，它回退到某个版本，只保留源码，回退commit和index信息&lt;br&gt;&lt;code&gt;git reset --soft&lt;/code&gt;：回退到某个版本，只回退了commit的信息，不会恢复到index file一级。如果还要提交，直接commit即可&lt;br&gt;&lt;code&gt;git reset --hard&lt;/code&gt;：彻底回退到某个版本，本地的源码也会变为上一个版本的内容&lt;br&gt;例如：&lt;br&gt;我要彻底返回在上一次提交以前的版本。&lt;code&gt;git reset --hrad HEAD~1&lt;/code&gt;&lt;br&gt;将本地的状态回退到和远程的一样。&lt;code&gt;git reset –hard origin/master&lt;/code&gt;&lt;br&gt;回退到上一次提交的状态，按照某一次的commit完全反向的进行一次commit。&lt;code&gt;git revert HEAD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;另外如果要舍弃本地新的文件，可以使用下边的命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clean -df&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Git删除分支和删除文件夹&quot;&gt;&lt;a href=&quot;#Git删除分支和删除文件夹&quot; class=&quot;headerlink&quot; title=&quot;Git删除分支和删除文件夹&quot;&gt;&lt;/a&gt;Git删除分支和删除文件夹&lt;/h2&gt;&lt;h3 id=&quot;删除分支-1&quot;&gt;&lt;a href=&quot;#删除分支-1&quot; class=&quot;headerlink&quot; title=&quot;删除分支&quot;&gt;&lt;/a&gt;删除分支&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;查看所有分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;删除HEAD分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin --delete HEAD&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;删除文件夹&quot;&gt;&lt;a href=&quot;#删除文件夹&quot; class=&quot;headerlink&quot; title=&quot;删除文件夹&quot;&gt;&lt;/a&gt;删除文件夹&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;查看本地分支下的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ls&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;删除xx文件夹及其下所有的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git rm xx -r &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;同步删除操作到远程分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;delete xx&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;提交分支&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Git的撤销与解决冲突&quot;&gt;&lt;a href=&quot;#Git的撤销与解决冲突&quot; class=&quot;headerlink&quot; title=&quot;Git的撤销与解决冲突&quot;&gt;&lt;/a&gt;Git的撤销与解决冲突&lt;/h2&gt;&lt;h3 id=&quot;Git的撤销&quot;&gt;&lt;a href=&quot;#Git的撤销&quot; class=&quot;headerlink&quot; title=&quot;Git的撤销&quot;&gt;&lt;/a&gt;Git的撤销&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;git撤销本地修改&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard origin/master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;git回退到前n个版本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard HEAD~&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Git多用户提交冲突一&quot;&gt;&lt;a href=&quot;#Git多用户提交冲突一&quot; class=&quot;headerlink&quot; title=&quot;Git多用户提交冲突一&quot;&gt;&lt;/a&gt;Git多用户提交冲突一&lt;/h3&gt;&lt;p&gt;场景：用户UserA修改了文件File1，用户UserB也修改了文件File1并成功merge到了服务器上，而UserA和UserB改动了同一个代码块，当UserA拉取代码时git无法merge此改动，就会出现如下错误提示，&lt;br&gt;error: Your local changes to the following files would be overwritten by merge: cn/trinea/appsearch/MainActivity.java&lt;br&gt;Please, commit your changes or stash them before you can merge.&lt;br&gt;这时&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果希望保存本地改动并拉下最新服务器代码，手动merge，使用命令如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git stash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git stash pop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git diff -w cn/trinea/appsearch/MainActivity.java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中git stash表示备份当前工作区内容到git栈中，并使当前工作区内容与上次提交时一致，然后git pull拉取最新代码，git stash pop表示从Git栈中读取最近一次保存的内容，恢复工作区的相关内容，最后git diff表示手动merge你之前冲突的文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果希望服务器上版本完全覆盖本地修改，使用如下命令回退并更新：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Git多用户提交冲突二&quot;&gt;&lt;a href=&quot;#Git多用户提交冲突二&quot; class=&quot;headerlink&quot; title=&quot;Git多用户提交冲突二&quot;&gt;&lt;/a&gt;Git多用户提交冲突二&lt;/h3&gt;&lt;p&gt;场景：用户UserA提交了change A，没有merge，之后用户UserB提交了change B，merge成功。当merge change A时出错，会提示，&lt;br&gt;The change could not be merged due to a path conflict.&lt;br&gt;Please rebase the change locally and upload the rebased commit for review.&lt;/p&gt;
&lt;p&gt;大多数人的解决方式都是拷贝改动代码，并重拉最新代码Beyond Compare，重新提交。其实几条命令就可以搞定，gerrit上先abandon原来的提交，后执行如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset --hard HEAD~&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git pull&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git fetch ssh://xxxx refs/changes/&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;28146&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; git cherry-pick FETCH_HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push gerrit:xxxxxx HEAD:refs/&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;/xxxxxx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中git reset –hard HEAD~2表示本地代码后退两级，如果有问题可以多后退几次&lt;br&gt;git pull表示拉最新代码&lt;br&gt;git fetch 表示获取之前没merge成功的改动到本地，后面跟的具体地址为gerrit上该change review页面选择cherry-pick、ssh后的地址&lt;br&gt;git push 跟平时push一样&lt;/p&gt;
&lt;p&gt;Enjoy It!&lt;/p&gt;
&lt;h2 id=&quot;学习资料&quot;&gt;&lt;a href=&quot;#学习资料&quot; class=&quot;headerlink&quot; title=&quot;学习资料&quot;&gt;&lt;/a&gt;学习资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://try.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Try Github在线学习Git版本控制&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Git的常用命名集合，包括创建分支、合并分支、删除分支、tag的操作、reset的操作、撤销、解决commit冲突和删除分支上的文件及文件夹。
    
    </summary>
    
      <category term="Git" scheme="http://xiaoqianchang.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="http://xiaoqianchang.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Markdown编辑器</title>
    <link href="http://xiaoqianchang.github.io/2016/03/02/Markdown-tools/"/>
    <id>http://xiaoqianchang.github.io/2016/03/02/Markdown-tools/</id>
    <published>2016-03-02T05:30:10.000Z</published>
    <updated>2017-02-25T13:24:44.000Z</updated>
    
    <content type="html">&lt;p&gt;作为一个开源人，如果你不会使用Markdown语法，那你就OUT了！Markdown 是 2004 年由 John Gruberis 设计和开发的纯文本格式的语法，是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;作为一个开源人，如果你不会使用Markdown语法，那你就OUT了！Markdown 是 2004 年由 John Gruberis 设计和开发的纯文本格式的语法，非常的简单实用。&lt;a href=&quot;http://code.csdn.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSDN CODE&lt;/a&gt; 平台的 &lt;a href=&quot;https://code.csdn.net/help&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;帮助文档&lt;/a&gt;、项目README文件、文档项目甚至包括ISSUES和项目评论等都是支持Markdown语法的！&lt;/p&gt;
&lt;p&gt;以下，是我使用过的Markdown编辑器，喜欢用Markdown的朋友都来看看吧！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zybuluo.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cmd Markdown&lt;/a&gt; 作业部落出品，也是一款不错的工具和博客平台兼顾的产品。全平台且提供web版&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/zybuluo.png&quot; alt=&quot;作业部落&quot;&gt;&lt;/p&gt;
&lt;p&gt;作业部落对于理科生来说跟容易驾驭。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.markdownpad.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarkdownPad&lt;/a&gt; 一款全功能的编辑器，被很多人称赞为 windows 平台最好用的markdown编辑器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/markdownpad.png&quot; alt=&quot;MarkdownPad&quot;&gt;&lt;/p&gt;
&lt;p&gt;Markdown Pad 是 Windows 下的全功能 Markdown 编辑器。用户可以通过方便的键盘快捷键和工具栏按钮来使用或者移除 Markdown 格式。当你创建的时候，可以实时看到 HTML 格式的 Markdown 文档。当用户打字时，LivePreview 就会自动滚动到当前编辑的位置。&lt;/p&gt;
&lt;p&gt;在这里安装MarkdownPad的时候，安装过程很简单，安装完成后这里点击“免费试用”，这没有试用期，可以免费一直使用。当然你想表达感谢之意支持就购买。还有就是破解。请看下面&lt;/p&gt;
&lt;h2 id=&quot;MarkdownPad2-5-注册码破解&quot;&gt;&lt;a href=&quot;#MarkdownPad2-5-注册码破解&quot; class=&quot;headerlink&quot; title=&quot;MarkdownPad2.5 注册码破解&quot;&gt;&lt;/a&gt;MarkdownPad2.5 注册码破解&lt;/h2&gt;&lt;p&gt;在使用MarkdownPad2.5的时候&lt;br&gt;&lt;img src=&quot;http://7xrcic.com1.z0.glb.clouddn.com/markdownpad-version.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;可以使用注册码破解：&lt;/p&gt;
&lt;p&gt;邮箱:&lt;/p&gt;
&lt;p&gt;Soar360@live.com&lt;/p&gt;
&lt;p&gt;授权秘钥:&lt;/p&gt;
&lt;p&gt;GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5&lt;br&gt;QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8&lt;br&gt;HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMn&lt;br&gt;xt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==&lt;/p&gt;
&lt;h2 id=&quot;参考资料：&quot;&gt;&lt;a href=&quot;#参考资料：&quot; class=&quot;headerlink&quot; title=&quot;参考资料：&quot;&gt;&lt;/a&gt;参考资料：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://m.blog.csdn.net/article/details?id=50685187&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarkdownPad 2 安装使用之二三事&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个开源人，如果你不会使用Markdown语法，那你就OUT了！Markdown 是 2004 年由 John Gruberis 设计和开发的纯文本格式的语法，是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。&lt;/p&gt;
    
    </summary>
    
      <category term="Markdown" scheme="http://xiaoqianchang.github.io/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="http://xiaoqianchang.github.io/tags/Markdown/"/>
    
      <category term="工具" scheme="http://xiaoqianchang.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://xiaoqianchang.github.io/2016/02/24/Hello-Hexo/"/>
    <id>http://xiaoqianchang.github.io/2016/02/24/Hello-Hexo/</id>
    <published>2016-02-24T10:24:10.000Z</published>
    <updated>2017-02-25T14:28:20.415Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Hexo-介绍&quot;&gt;&lt;a href=&quot;#Hexo-介绍&quot; class=&quot;headerlink&quot; title=&quot;Hexo 介绍&quot;&gt;&lt;/a&gt;Hexo 介绍&lt;/h2&gt;&lt;p&gt;Hexo 是一个简单地、轻量地、基于Node的一个静态博客框架。通过Hexo我们可以快速创建自己的博客，仅需要几条命令就可以完成。&lt;/p&gt;
&lt;p&gt;发布时，Hexo可以部署在自己的Node服务器上面，也可以部署github上面。对于个人用户来说，部署在github上好处颇多，不仅可以省去服务器的成本，还可以减少各种系统运维的麻烦事(系统管理、备份、网络)。所以，基于github的个人站点，正在开始流行起来….&lt;/p&gt;
&lt;p&gt;Hexo的官方网站：&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hexo.io/&lt;/a&gt; ，也是基于Github构建的网站。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Hexo安装&quot;&gt;&lt;a href=&quot;#Hexo安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo安装&quot;&gt;&lt;/a&gt;Hexo安装&lt;/h2&gt;&lt;p&gt;系统环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;win7 64bit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;node v0.10.5&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;npm 1.2.19&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hexo安装，要用全局安装，加-g参数。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\Users\ChangXiao&amp;gt;npm install -g hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看hexo的版本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\Users\ChangXiao&amp;gt;hexo version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装好后，我们就可以使用Hexo创建项目了。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c:\Users\ChangXiao&amp;gt;hexo init nodejs-hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进入目录&lt;code&gt;cd nodejs-hexo&lt;/code&gt;，并启动Hexo服务器&lt;code&gt;hexo server&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这时端口4000被打开了，我们能过浏览器打开地址，&lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考资料：&quot;&gt;&lt;a href=&quot;#参考资料：&quot; class=&quot;headerlink&quot; title=&quot;参考资料：&quot;&gt;&lt;/a&gt;参考资料：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.fens.me/hexo-blog-github/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo在github上构建免费的Web应用&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Hexo-介绍&quot;&gt;&lt;a href=&quot;#Hexo-介绍&quot; class=&quot;headerlink&quot; title=&quot;Hexo 介绍&quot;&gt;&lt;/a&gt;Hexo 介绍&lt;/h2&gt;&lt;p&gt;Hexo 是一个简单地、轻量地、基于Node的一个静态博客框架。通过Hexo我们可以快速创建自己的博客，仅需要几条命令就可以完成。&lt;/p&gt;
&lt;p&gt;发布时，Hexo可以部署在自己的Node服务器上面，也可以部署github上面。对于个人用户来说，部署在github上好处颇多，不仅可以省去服务器的成本，还可以减少各种系统运维的麻烦事(系统管理、备份、网络)。所以，基于github的个人站点，正在开始流行起来….&lt;/p&gt;
&lt;p&gt;Hexo的官方网站：&lt;a href=&quot;http://hexo.io/&quot;&gt;http://hexo.io/&lt;/a&gt; ，也是基于Github构建的网站。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://xiaoqianchang.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://xiaoqianchang.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xiaoqianchang.github.io/2016/02/24/hello-world/"/>
    <id>http://xiaoqianchang.github.io/2016/02/24/hello-world/</id>
    <published>2016-02-24T10:00:10.000Z</published>
    <updated>2016-03-09T09:48:54.791Z</updated>
    
    <content type="html">&lt;p&gt;独立的博客搭建好了，0.0&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;独立的博客搭建好了，0.0&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
